'use strict';
jQuery(document).ready(function (e) {

        if (wpiePluginSettings == null)
        {
                wpiePluginSettings = [];
        }
        if (typeof wpiePluginSettings["wpieImportId"] == 'undefined') {

                wpiePluginSettings["wpieImportId"] = 0;
        }
        if (typeof wpiePluginSettings.importData == 'undefined') {

                wpiePluginSettings.importData = [];
        }

        wpiePluginSettings.isModalHide = true;

        if (typeof jQuery.fn.chosen === "function" && jQuery('.wpie_content_data_select').length) {
                jQuery('.wpie_content_data_select').chosen();
        }

        if (jQuery('#wpie_upload_container').length) {
                wpie_set_local_file_uploader();

        }
        if (jQuery('.wpie_import_ref_id').length) {

                var ref_id = jQuery('.wpie_import_ref_id').val();

                if (ref_id === "") {

                        var error_msg = jQuery('.wpie_error_msg').attr("msg");

                        if (error_msg !== "") {
                                wpieSetErrorMsg(error_msg);
                        }
                } else {
                        var import_id = jQuery('.wpie_import_id').val();
                        var nonce = jQuery('.wpie_import_nonce').val();

                        wpieProcessingReimport(import_id, nonce, ref_id);
                }

        }

        wpieSetToolTip();

        if (wpiePluginSettings.isUploadDirWritable !== "1")
        {
                wpieSetStrictErrorMsg(wpiePluginSettings.wpieLocalizeText.uploadDirWritableError);
        }
});
function wpie_set_local_file_uploader()
{
        var fileUploader = new plupload.Uploader({
                runtimes: 'html5,silverlight,flash,html4',
                url: wpiePluginSettings.wpieAjaxURL,
                drop_element: 'wpie_upload_drag_drop',
                chunk_size: '1024kb',
                file_data_name: 'local_file',
                multiple_queues: false,
                multi_selection: false,
                max_file_size: '100Gb',
                browse_button: 'plupload_browse_button',
                container: 'wpie_upload_container',
                filters: {
                        prevent_duplicates: false,
                },
                multipart_params: {
                        'action': 'wpie_import_local_upload_file',
                        'wpie_import_id': wpiePluginSettings.wpieImportId
                },
                flash_swf_url: 'plupload.flash.swf',
                silverlight_xap_url: 'plupload.silverlight.xap'
        });

        fileUploader.bind("BeforeUpload", function (up, file) {

                fileUploader.settings.multipart_params.wpie_import_id = wpiePluginSettings.wpieImportId;
        });

        fileUploader.bind('Init', function (up) {

                var uploaddiv = jQuery('#wpie_upload_container');

                if (up.features.dragdrop) {

                        uploaddiv.addClass('wpie_drag_drop');
                        jQuery('#wpie_upload_container')
                                .bind('dragover.wp_uploader', function () {
                                        uploaddiv.addClass('wpie_drag_over');
                                })
                                .bind('dragleave.wp_uploader, drop.wp_uploader', function () {
                                        uploaddiv.removeClass('wpie_drag_over');
                                });
                } else {
                        uploaddiv.removeClass('drag_drop');
                        jQuery('.wpie_upload_drag_drop').unbind('.wp_uploader');
                }
        });

        fileUploader.init();

        fileUploader.bind('FilesAdded', function (up, files) {

                jQuery('.wpie_upload_container_wrapper .wpie_file_list_wrapper').html('');

                jQuery('.wpie_upload_drag_drop_data').attr('wpie_status', 'processing');

                jQuery('.wpie_local_uploaded_filename_label').text(wpiePluginSettings.wpieLocalizeText.wpieUploadingText);

                var fileList = "";

                var isValidExt = true;

                jQuery.each(files, function (i, file) {

                        var ext = file.name.split('.').pop().toLowerCase();

                        if (jQuery.inArray(ext, ['txt', 'zip', 'json', 'xml', 'xls', 'xlsx', 'csv', 'ods', 'gz', 'tar']) == -1) {

                                isValidExt = false;

                                return false;
                        }

                        fileList += file.name + " ( " + plupload.formatSize(file.size) + " ) ";
                });

                if (!isValidExt) {

                        wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.invalidFileExtensionText);

                        return false;

                }

                jQuery('.wpie_local_uploaded_filename').text(fileList);

                up.start();

        });

        fileUploader.bind('UploadProgress', function (up, file) {

                jQuery('.wpie_uploaded_file_list_wrapper').show();

                jQuery('.wpie_import_upload_process_per').css("width", file.percent + "%").html(file.percent + "%");
        });

        fileUploader.bind('FileUploaded', function (up, file, results) {

                jQuery('.wpie_import_ref_id').val("");

                if (results !== null && typeof (results.response) != "undefined" && results.response !== null) {

                        var response_data = JSON.parse(results.response);

                        if (response_data.status == "error") {

                                wpieSetErrorMsg(response_data.message);

                                return false;
                        } else {

                                wpiePluginSettings.importData[wpiePluginSettings.wpieImportId] = [];

                                wpieSetFileData(response_data);

                        }
                } else {

                        wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.invalidFileExtensionText);

                        return false;
                }

        });

        fileUploader.bind('Error', function (up, err) {

                jQuery('.wpie_uploaded_file_list').hide();

                if (typeof (err.code) != "undefined" && err.code == -601)
                {
                        wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.invalidFileExtensionText);

                        return false;
                } else {

                        wpieHandleAjaxError(err, "");
                }
        });
}

function wpieProcessingReimport(import_id, nonce, ref_id) {

        var task_list = {
                "processingReimport": wpiePluginSettings.wpieLocalizeText.processingReimport
        }

        wpieSetProcessLoader(task_list);

        jQuery.ajax({
                url: wpiePluginSettings.wpieAjaxURL,
                type: 'GET',
                data: "action=wpie_import_process_reimport&import_id=" + import_id + "&nonce=" + nonce + "&ref_id=" + ref_id,
                dataType: 'json',
                async: true,
                success: function (results) {

                        wpieUpdateProcessLoader("processingReimport");

                        if (results.status == "error") {

                                wpieSetErrorMsg(results.message);

                                return false;

                        } else {


                                if (typeof results.import_type != "undefined" && jQuery('.wpie_import_type_select').val() != results.import_type) {

                                        jQuery('.wpie_import_type_select').val(results.import_type).trigger('change').trigger('chosen:updated');

                                        if (results.import_type == "taxonomies" && typeof results.taxonomy_type != "undefined" && jQuery('.wpie_taxonomies_types_select').val() != results.taxonomy_type) {

                                                jQuery('.wpie_taxonomies_types_select').val(results.taxonomy_type).trigger('change').trigger('chosen:updated');
                                        }
                                }

                                wpieSetFileData(results);
                        }

                },
                error: function (jqXHR, exception) {

                        wpieHandleAjaxError(jqXHR, exception);
                }
        });
}
function wpieSetFileData(response_data) {

        if (0 == wpiePluginSettings.wpieImportId && typeof (response_data.wpie_import_id) != "undefined" && response_data.wpie_import_id !== null)
        {
                wpiePluginSettings.wpieImportId = response_data.wpie_import_id;
        }
        if (typeof (response_data.file_list) != "undefined" && response_data.file_list !== null) {

                if (response_data.file_count == 0) {

                        jQuery('.wpie_upload_section_wrapper:visible .wpie_file_list_wrapper').html('');

                        wpieSetErrorMsg(response_data.message);

                        return false;
                } else {
                        wpieHandleFileList(response_data.file_list, '.wpie_upload_section_wrapper:visible');
                }
        }

        jQuery('.wpie_upload_section_wrapper:visible .wpie_local_uploaded_filename_label').text(wpiePluginSettings.wpieLocalizeText.wpieUploadCompleteText);

        var activeFile = jQuery('.wpie_upload_section_wrapper:visible .wpie_upload_file_list:checked').val();

        wpiePluginSettings.importData.activeFile = activeFile;

        wpieSetFileAttributes(response_data);

        var task_list = {
                "wpieValidateUpload": wpiePluginSettings.wpieLocalizeText.wpieParingUploadFileText,
                "wpieGetTemplates": wpiePluginSettings.wpieLocalizeText.wpieGetTemplatesText,
                "wpieGetSettingsList": wpiePluginSettings.wpieLocalizeText.wpieGetSettingList,
                "wpieGetConfig": wpiePluginSettings.wpieLocalizeText.wpieGetConfigText,
                "wpieGetFields": wpiePluginSettings.wpieLocalizeText.wpieGetFieldsText,
                "wpieGetRecords": wpiePluginSettings.wpieLocalizeText.wpieGetRecordsText
        }

        wpieSetProcessLoader(task_list);

        wpieValidateUploadedFile(false, ",");

        wpieImportGetTemplates();

        wpieImportGetSettings();
}
function wpieSetFileAttributes(data) {

        var activeFile = wpiePluginSettings.importData.activeFile;

        if (typeof wpiePluginSettings.importData[activeFile] == 'undefined') {
                wpiePluginSettings.importData[activeFile] = [];
        }

        wpiePluginSettings.importData[activeFile].fileType = "";

        wpiePluginSettings.importData[activeFile].fileName = "";

        if (typeof data.file_name != 'undefined') {

                wpiePluginSettings.importData[activeFile].fileName = data.file_name;

                wpiePluginSettings.importData[activeFile].fileType = data.file_name.substr(data.file_name.lastIndexOf('.') + 1);
        }

        wpiePluginSettings.importData[activeFile].fileSize = "0kb";

        if (typeof data.file_size != 'undefined') {
                wpiePluginSettings.importData[activeFile].fileSize = plupload.formatSize(data.file_size);
        }

        var fileType = wpiePluginSettings.importData[activeFile].fileType;

        if (jQuery.inArray(fileType, ['xls', 'xlsx', 'csv', 'ods']) == -1) {

                jQuery('.wpie_file_options_wrapper').hide();
        } else {
                jQuery('.wpie_file_options_wrapper').show();

                if (fileType == "csv") {
                        jQuery('.wpie_csv_delimiter_wrapper').show();
                } else {
                        jQuery('.wpie_csv_delimiter_wrapper').hide();
                }
        }
}
function wpieSetProcessLoader(task_list) {

        var html = "";

        jQuery.each(task_list, function (key, text) {

                html += '<div class="wpie_task_wrapper ' + key + '" >';
                html += '<div class="wpie_task_icon_wrapper wpie_task_processing_icon"><i class="fas fa-spinner fa-spin wpie_spinner_btn_icon"></i></div>';
                html += '<div class="wpie_task_icon_wrapper wpie_task_completed_icon"><i class="fas fa-check-circle wpie_general_btn_icon " aria-hidden="true"></i></div>';
                html += '<div class="wpie_task_title">' + text + '</div>';
                html += '</div>'

        });

        var is_show = setInterval(function () {

                if (wpiePluginSettings.isModalHide === true) {

                        clearInterval(is_show);

                        jQuery('.wpie_task_list').html(html);

                        jQuery('.wpie_processing_data').modal({backdrop: 'static', keyboard: false, show: true});

                        jQuery('.wpie_processing_data').on('shown.bs.modal', function (e) {
                                wpiePluginSettings.isModalHide = false;
                        });

                }

        }, 200);

}

function wpieUpdateProcessLoader(key) {

        var is_completed = setInterval(function () {

                if (jQuery("." + key).length) {

                        clearInterval(is_completed);

                        jQuery("." + key).addClass("task_completed");

                        if (!jQuery('.wpie_task_list').find(".wpie_task_wrapper:not(.task_completed)").length)
                        {
                                var is_hide = setInterval(function () {

                                        if (wpiePluginSettings.isModalHide === false) {

                                                clearInterval(is_hide);

                                                jQuery('.wpie_processing_data').modal('hide');

                                                jQuery('.wpie_processing_data').on('hidden.bs.modal', function (e) {
                                                        wpiePluginSettings.isModalHide = true;
                                                });
                                        }
                                }, 200);
                        }
                }
        }, 200);


}
function wpieValidateUploadedFile(is_update, wpie_csv_delimiter)
{
        var activeFile = wpiePluginSettings.importData.activeFile;

        if (typeof wpiePluginSettings.importData[activeFile] == 'undefined') {
                wpiePluginSettings.importData[activeFile] = [];
        }

        if (is_update || typeof wpiePluginSettings.importData[activeFile].count == 'undefined')
        {
                var is_new_request = is_update ? 0 : 1;

                var first_row_is_title = jQuery('.wpie_file_first_row_is_title:checked').val();

                jQuery.ajax({
                        url: wpiePluginSettings.wpieAjaxURL,
                        type: 'GET',
                        data: "action=wpie_import_validate_uploads&wpie_import_id=" + wpiePluginSettings.wpieImportId + "&activeFile=" + activeFile + "&wpie_csv_delimiter=" + wpie_csv_delimiter + "&is_new_request=" + is_new_request + "&wpie_file_first_row_is_title=" + first_row_is_title,
                        dataType: 'json',
                        async: true,
                        success: function (results) {

                                if (results.status == "error") {

                                        wpieSetErrorMsg(results.message);

                                        return false;

                                } else {

                                        wpieSetFileAttributes(results);

                                        jQuery('.wpie_csv_delimiter').val(results.delimiter);

                                        wpieUpdateProcessLoader("wpieValidateUpload");

                                        jQuery('.wpie_import_step1_btn').show();

                                        jQuery(document).trigger('wpieValidUploadFile');

                                        wpieGetConfig();
                                }

                        },
                        error: function (jqXHR, exception) {

                                wpieHandleAjaxError(jqXHR, exception);
                        }
                });
        } else {

                var fileType = wpiePluginSettings.importData[activeFile].fileType != 'undefined' ? wpiePluginSettings.importData[activeFile].fileType : "";

                if (jQuery.inArray(fileType, ['xls', 'xlsx', 'csv', 'ods']) == -1) {

                        jQuery('.wpie_file_options_wrapper').hide();
                } else {
                        jQuery('.wpie_file_options_wrapper').show();

                        if (fileType == "csv") {
                                jQuery('.wpie_csv_delimiter_wrapper').show();
                        } else {
                                jQuery('.wpie_csv_delimiter_wrapper').hide();
                        }
                }

                wpieUpdateProcessLoader("wpieValidateUpload");

                jQuery('.wpie_import_step1_btn').show();

                jQuery(document).trigger('wpieValidUploadFile');

                wpieGetConfig();

        }
}
jQuery(document).on('wpieValidUploadFile', function (e) {

        var ref_id = jQuery('.wpie_import_ref_id').val();

        wpiePluginSettings.getImportTemplate = false;

        if (ref_id !== "") {

                wpiePluginSettings.getImportTemplate = true;
        }
});
jQuery(document).on('wpieAfterChangeConfig', function (e) {

        var ref_id = jQuery('.wpie_import_ref_id').val();

        if (ref_id !== "" && typeof wpiePluginSettings.getImportTemplate != 'undefined' && wpiePluginSettings.getImportTemplate === true) {

                wpiePluginSettings.getImportTemplate = false;

                var task_list = {
                        "wpieChangeTemplates": wpiePluginSettings.wpieLocalizeText.wpieChangeTemplatesText,
                        "wpieGetTemplatesText": wpiePluginSettings.wpieLocalizeText.wpieGetTemplatesText
                }

                wpieSetProcessLoader(task_list);

                wpieImportGetTemplateData(jQuery(".wpie_import_id").val());

                jQuery('.wpie_import_step5_btn').trigger("click");

                jQuery('.wpie_field_mapping_data_container').show();
        }
});
function wpieGetConfig() {

        if (typeof wpiePluginSettings.importData[wpiePluginSettings.wpieImportId] == 'undefined') {

                wpiePluginSettings.importData[wpiePluginSettings.wpieImportId] = [];
        }

        if (typeof wpiePluginSettings.importData[wpiePluginSettings.wpieImportId].config != 'undefined') {

                wpieUpdateProcessLoader("wpieGetConfig");

                wpieConfigImport();

        } else
                jQuery.ajax({
                        url: wpiePluginSettings.wpieAjaxURL,
                        type: 'GET',
                        data: "action=wpie_import_get_config&import_id=" + wpiePluginSettings.wpieImportId,
                        dataType: 'json',
                        async: true,
                        success: function (results) {

                                if (results.status == "error") {

                                        wpieSetErrorMsg(results.message);

                                        return false;

                                } else {

                                        wpieUpdateProcessLoader("wpieGetConfig");

                                        if (typeof results.config != 'undefined') {

                                                wpiePluginSettings.importData[wpiePluginSettings.wpieImportId].config = results.config;

                                        } else {
                                                wpiePluginSettings.importData[wpiePluginSettings.wpieImportId].config = {};

                                        }
                                        wpieConfigImport();
                                }

                        },
                        error: function (jqXHR, exception) {

                                wpieHandleAjaxError(jqXHR, exception);
                        }
                });

}
function wpieConfigImport()
{
        var config = wpiePluginSettings.importData[wpiePluginSettings.wpieImportId].config;

        wpiePluginSettings.importData[wpiePluginSettings.wpieImportId].changeConfig = true;

        if (typeof config.import_type != "undefined" && config.import_type != "")
        {
                if (jQuery('.wpie_import_type_select').val() != config.import_type) {

                        jQuery('.wpie_import_type_select').val(config.import_type).trigger('chosen:updated');

                        wpieImportGetTemplates();

                        wpieImportGetSettings();

                }
                if (config.import_type != "taxonomies") {
                        jQuery('.wpie_taxonomies_types_wrapper').hide();
                } else {
                        jQuery('.wpie_taxonomies_types_wrapper').show();
                }
                if (config.import_type == "taxonomies" && typeof config.import_sub_type != "undefined" && config.import_type != "" && jQuery('.wpie_taxonomies_types_select').val() != config.import_sub_type) {
                        jQuery('.wpie_taxonomies_types_select').val(config.import_sub_type).trigger('change').trigger('chosen:updated');
                }
        }

        wpieGetImportFields(jQuery('.wpie_import_type_select').val());

        wpieGetFilteredRecords(0, 1, '', '', true);

}
function wpieSetTemplate(fields) {

        if ((typeof fields == "object") && (!jQuery.isEmptyObject(fields))) {

                wpieSetCF(fields);

                wpieSetTaxonomy(fields);

                jQuery(document).trigger('wpieChangeTemplate', [fields]);

                jQuery('.wpie_item_update_field').prop("checked", false);

                jQuery.each(fields, function (key, data) {

                        if ((key.match("^wpie_item_cf") || key.match("^wpie_item_acf") || key.match("^wpie_item_taxonomy") || key.match("^wpie_item_set_taxonomy")) || !((key.match("^wpie_item_") || key.match("^wpie_existing_item") || key.match("^is_update_item") || key.match("^wpie_wpml_lang") || key.match("^wpie_polylang_lang"))))
                        {
                                return true;
                        }
                        if (jQuery('.' + key).length) {

                                if (jQuery('.' + key).first().is(".wpie_radio,.wpie_checkbox")) {

                                        var is_custom = true;

                                        jQuery.each(jQuery('.' + key), function (e) {

                                                if (data !== "as_specified" && jQuery(this).val() == data) {
                                                        jQuery(this).prop("checked", true);
                                                        is_custom = false;
                                                } else {
                                                        jQuery(this).prop("checked", false);
                                                }
                                        });

                                        if (is_custom === true) {

                                                jQuery('.' + key + "_as_specified").prop("checked", true).trigger('change');

                                                jQuery('.' + key + '_as_specified_data').val(data);

                                        } else {
                                                jQuery('.' + key + "_as_specified").prop("checked", false).trigger('change');

                                                jQuery('.' + key + '_as_specified_data').val("");
                                        }

                                } else if (jQuery('.' + key).first().is(".wpie_content_data_select")) {

                                        var is_custom = true;

                                        jQuery.each(jQuery('.' + key + " option"), function (e) {

                                                if (jQuery(this).attr("value") == data) {
                                                        is_custom = false;
                                                        return false;
                                                }
                                        });

                                        if (is_custom) {

                                                jQuery('.' + key).val("as_specified").trigger('chosen:updated').trigger('change');

                                                jQuery('.' + key + "_as_specified_wrapper").show();

                                                jQuery('.' + key + '_as_specified_data').val(data);
                                        } else {

                                                jQuery('.' + key).val(data).trigger('chosen:updated').trigger('change');

                                                jQuery('.' + key + "_as_specified_wrapper").hide();

                                                jQuery('.' + key + '_as_specified_data').val("");
                                        }


                                } else {

                                        jQuery('.' + key).val(data);
                                }
                        }

                });

                var keys = ["wpie_item_unsuccess_set_draft", "wpie_item_set_image_title", "wpie_item_set_image_caption", "wpie_item_set_image_alt", "wpie_item_set_image_description", "wpie_item_image_rename", "wpie_item_change_ext", "wpie_item_attachement_search_for_existing"];

                jQuery.each(keys, function (index, key) {
                        if (typeof fields[key] == 'undefined') {
                                jQuery("." + key).prop("checked", false);
                        }
                });
                keys = ["wpie_item_search_existing_images", "wpie_item_keep_images", "wpie_item_first_imaege_is_featured"];

                jQuery.each(keys, function (index, key) {
                        if (typeof fields[key] == 'undefined') {
                                jQuery("." + key).prop("checked", true);
                        }
                });
                jQuery(document).trigger('wpieAfterChangeTemplate', [fields]);

                wpieSetToolTip();

        }
        wpieUpdateProcessLoader("wpieChangeTemplates");

}
function wpieSetToolTip() {
        if (typeof jQuery.fn.tipso === "function" && jQuery('.wpie_data_tipso').length) {
                jQuery('.wpie_data_tipso').tipso({
                        useTitle: false,
                        background: 'rgba(0,0,0,0.8)',
                        color: "#ffffff",
                        size: "small",
                        tooltipHover: true
                });
        }
}
function wpieValidateProcess() {

        return true;
}
function wpieGetImportFields(type)
{
        if (typeof wpiePluginSettings.importData[type] != "undefined" && typeof wpiePluginSettings.importData[type].fields != 'undefined') {

                jQuery('.wpie_field_mapping_section').html(wpiePluginSettings.importData[type].fields);

                jQuery('.wpie_field_mapping_section').find('.wpie_content_data_select').chosen();

                if (typeof wpiePluginSettings.importData[type].searchFields != 'undefined') {

                        jQuery('.wpie_search_item_wrapper').html(wpiePluginSettings.importData[type].searchFields);
                }
                if (typeof wpiePluginSettings.importData[type].updateFields != 'undefined') {

                        jQuery('.wpie_update_item_wrapper').html(wpiePluginSettings.importData[type].updateFields);
                }

                wpieUpdateProcessLoader("wpieGetFields");

                wpieChangeConfig();

        } else {

                jQuery.ajax({
                        url: wpiePluginSettings.wpieAjaxURL,
                        type: 'GET',
                        data: "action=wpie_import_get_fields&type=" + type,
                        dataType: 'json',
                        async: true,
                        success: function (results) {

                                if (results.status == "error") {

                                        wpieSetErrorMsg(results.message);

                                        return false;

                                } else {

                                        wpieUpdateProcessLoader("wpieGetFields");

                                        if (typeof wpiePluginSettings.importData[type] == 'undefined') {

                                                wpiePluginSettings.importData[type] = [];
                                        }

                                        if (typeof results.fields != 'undefined') {

                                                wpiePluginSettings.importData[type].fields = results.fields;

                                                jQuery('.wpie_field_mapping_section').html(results.fields);

                                                jQuery('.wpie_field_mapping_section').find('.wpie_content_data_select').chosen();
                                        }

                                        if (typeof results.search_fields != 'undefined') {

                                                wpiePluginSettings.importData[type].searchFields = results.search_fields;

                                                jQuery('.wpie_search_item_wrapper').html(results.search_fields);
                                        }

                                        if (typeof results.update_fields != 'undefined') {

                                                wpiePluginSettings.importData[type].updateFields = results.update_fields;

                                                jQuery('.wpie_update_item_wrapper').html(results.update_fields);
                                        }
                                        wpieChangeConfig();
                                }
                        },
                        error: function (jqXHR, exception) {

                                wpieHandleAjaxError(jqXHR, exception);
                        }
                });
        }
}
function wpieChangeConfig() {

        if (typeof wpiePluginSettings.importData[wpiePluginSettings.wpieImportId] != 'undefined' && typeof wpiePluginSettings.importData[wpiePluginSettings.wpieImportId].changeConfig != 'undefined' && wpiePluginSettings.importData[wpiePluginSettings.wpieImportId].changeConfig == true) {

                wpiePluginSettings.importData[wpiePluginSettings.wpieImportId].changeConfig = false;

                var config = wpiePluginSettings.importData[wpiePluginSettings.wpieImportId].config;

                jQuery(document).trigger('wpieChangeConfig', [config.fields]);

                if (typeof config.fields != "undefined")
                {
                        wpieSetTemplate(config.fields);
                }

        }
        wpieSetToolTip();

        jQuery(document).trigger('wpieAfterChangeConfig');
}
function wpieGetFilteredRecords(start, length, xpath, root, is_update)
{
        jQuery.ajax({
                url: wpiePluginSettings.wpieAjaxURL,
                type: 'POST',
                data: "action=wpie_import_get_filtered_records&wpie_import_id=" + wpiePluginSettings.wpieImportId + "&start=" + start + "&length=" + length + "&xpath=" + xpath + "&root=" + root,
                dataType: 'json',
                success: function (results) {

                        if (results.status == "error") {

                                wpieSetErrorMsg(results.message);

                                return false;
                        }

                        jQuery('.wpie_element_nav_element').val(start + 1);

                        var activeFile = wpiePluginSettings.importData.activeFile;

                        if (typeof results.count != 'undefined') {

                                wpiePluginSettings.importData[activeFile].count = results.count;

                                jQuery('.wpie_data_element_action_nav_total').html(results.count);
                        }

                        if ((xpath == "" || is_update) && typeof results.xpath != 'undefined') {

                                var new_xpath = results.xpath.substring(1);

                                wpiePluginSettings.importData[activeFile].xpath = new_xpath;

                                jQuery('.wpie_xpath').val(new_xpath);
                        }

                        if ((root == "" || is_update) && typeof results.root != 'undefined') {

                                wpiePluginSettings.importData[activeFile].root = results.root;
                        }


                        if (typeof results.filter_element != 'undefined') {

                                wpiePluginSettings.importData[activeFile].node_list = results.filter_element;

                                jQuery('.wpie_element_list').html("").append(
                                        jQuery('<option></option>').val("").text(wpiePluginSettings.wpieLocalizeText.selectElementText)
                                        );

                                jQuery.each(results.filter_element, function (val, text) {
                                        jQuery('.wpie_element_list').append(
                                                jQuery('<option></option>').val(text).text(text)
                                                );
                                });

                                jQuery('.wpie_element_list').val("").trigger('chosen:updated');
                        }

                        var content = "";

                        var is_tree_view = true;

                        if (typeof results.file_type != 'undefined' && (results.file_type == "csv" || results.file_type == "xls" || results.file_type == "xlsx")) {

                                is_tree_view = false;
                                jQuery('.wpie_element_tag_outer').hide();


                                if (typeof results.content != 'undefined') {

                                        jQuery.each(results.content, function (index, data) {

                                                content += wpieGenerateTableView(data);
                                        });
                                }

                        } else {

                                jQuery('.wpie_element_tag_outer').show();

                                if (typeof results.node_list != 'undefined' && !jQuery.isEmptyObject(results.node_list)) {

                                        var node_list = "";

                                        jQuery.each(results.node_list, function (tag_name, count) {

                                                if (wpiePluginSettings.importData[activeFile].root == tag_name) {
                                                        var active_class = "wpie_active";
                                                } else {
                                                        var active_class = "";
                                                }
                                                node_list += '<div class="wpie_layout_tag_wrapper ' + active_class + '"><div class="wpie_layout_tag_name">' + tag_name + '</div><div class="wpie_layout_tag_count">' + count + '</div></div>';
                                        });

                                        jQuery('.wpie_element_tag_wrapper').html(node_list);

                                        wpiePluginSettings.importData[activeFile].node_list = results.node_list;
                                }

                                if (typeof results.content != 'undefined') {

                                        jQuery.each(results.content, function (index, data) {

                                                content += wpieGenerateXmlTagView(data);
                                        });
                                }

                        }

                        jQuery('.wpie_data_preview').html(content);

                        jQuery('.wpie_data_fields_container').html(content);

                        if (is_tree_view)
                        {
                                jQuery('.wpie_field_mapping_data_wrapper .wpie_data_fields_container').find('.wpie_tag.wpie_opening:not(.wpie_tag_has_child) .wpie_tag_name,.wpie_tag_attr_name').wpieInsertAtCaret();
                        } else {
                                jQuery('.wpie_data_fields_container').find('.wpie_tag_table_header_data').wpieInsertAtCaret();
                        }


                        wpiePluginSettings.importData[activeFile].content = results.content;


                        wpieUpdateProcessLoader("wpieGetRecords");


                        if (wpiePluginSettings.importData[activeFile].count == 0) {

                                wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.wpieNoRecordsFoundText);

                        }

                },
                error: function (jqXHR, exception) {

                        wpieHandleAjaxError(jqXHR, exception);
                }
        });
}
//jQuery(document).on('click', '.wpie_content_data_header', function () {
//
//    var content_data = jQuery(this).closest('.wpie_section_wrapper').find('.wpie_section_content');
//
//    if (jQuery(this).hasClass('wpie_section_wrapper_selected'))
//    {
//        jQuery(this).removeClass("wpie_section_wrapper_selected");
//
//    } else {
//
//        jQuery(this).addClass("wpie_section_wrapper_selected");
//    }
//
//    content_data.slideToggle("slow");
//
//});
jQuery(document).on('click', '.wpie_upload_menu', function () {

        if (!jQuery(this).hasClass('wpie_active')) {

                jQuery('.wpie_upload_menu.wpie_active').removeClass('wpie_active');

                jQuery(this).addClass('wpie_active');

                jQuery('.wpie_upload_section_wrapper:visible').hide();

                var key = jQuery(this).attr('show_container');

                jQuery('.wpie_file_upload_method').val(key);

                jQuery('.' + key).show();
        }

});
function wpieHandleAjaxError(jqXHR, exception)
{
        var msg = "";

        if (jqXHR.status === 0) {
                msg = wpiePluginSettings.wpieLocalizeText.wpie_ajax_not_connect_error;
        } else if (jqXHR.status == 400) {
                msg = wpiePluginSettings.wpieLocalizeText.wpie_ajax_400_error;
        } else if (jqXHR.status == 404) {
                msg = wpiePluginSettings.wpieLocalizeText.wpie_ajax_404_error;
        } else if (jqXHR.status == 500) {
                msg = wpiePluginSettings.wpieLocalizeText.wpie_ajax_internal_server_error;
        } else if (exception === 'parsererror') {
                msg = wpiePluginSettings.wpieLocalizeText.wpie_ajax_jason_parse_error;
        } else if (exception === 'timeout') {
                msg = wpiePluginSettings.wpieLocalizeText.wpie_ajax_time_out_error;
        } else if (exception === 'abort') {
                msg = wpiePluginSettings.wpieLocalizeText.wpie_ajax_request_aborted_error;
        } else {
                msg = wpiePluginSettings.wpieLocalizeText.wpie_ajax_uncaught_error + jqXHR.responseText;
        }

        wpieSetErrorMsg(msg);

        return false;
}
function wpieSetStrictErrorMsg(errorMsg)
{
        wpieHideLoader();

        jQuery('.wpie_strict_error_content').html(errorMsg);

        jQuery('.wpie_strict_error_model').modal({backdrop: 'static', show: true, keyboard: false});
}
function wpieSetErrorMsg(errorMsg)
{
        wpieHideLoader();

        jQuery('.wpie_error_content').html(errorMsg);

        jQuery('.wpie_error_model').modal({backdrop: true, show: true});
}
jQuery(document).on('show.bs.modal', '.modal', function (event) {
        var zIndex = 1040 + (10 * jQuery('.modal:visible').length);
        jQuery(this).css('z-index', zIndex);
        setTimeout(function () {
                jQuery('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
        }, 0);
});
function wpieSetSuccessMsg(successMsg)
{
        jQuery.notify({
                message: '<i class="far fa-check-circle"></i> ' + successMsg
        }, {
                type: 'success',
                placement: {
                        align: "right",
                        from: "bottom"
                },
                animate: {
                        enter: "animated fadeInUp",
                        exit: "animated fadeOutDown"
                },

        });
}
function wpieHandleFileList(fileData, file_class)
{
        var fileList = '<div class="wpie_file_list_header">' + wpiePluginSettings.wpieLocalizeText.wpieChooseFileText + '</div>' +
                '<div class="wpie_file_list_container">';

        var tempFlag = true;

        var uploadType = jQuery('.wpie_upload_type').val();

        var finalFile = "";


        jQuery.each(fileData, function (key, fileInfo) {

                if (tempFlag == true)
                {
                        tempFlag = false;

                        var ckstr = 'checked="checked"';

                        finalFile = key;

                } else
                {
                        var ckstr = "";
                }

                fileList += '<div class="wpie_file_list_element" >' +
                        '<input class="wpie_file_list wpie_upload_file_list wpie_radio"  type="radio" id="' + fileInfo.fileKey + '" value="' + fileInfo.fileKey + '" name="wpie_import_local_upload" ' + ckstr + '>' +
                        '<label class="wpie_file_list_data wpie_radio_label"  for="' + fileInfo.fileKey + '">' + fileInfo.fileName + '</label>' +
                        '</div>';

        });


        fileList += '</div>';

        jQuery(file_class).find('.wpie_file_list_wrapper').html(fileList);

        jQuery(file_class).find('.wpie_upload_finalFile').val(finalFile);
}
function wpieShowLoader()
{
        jQuery('.wpie_loader').removeClass('wpie_hidden');
}
function wpieHideLoader()
{
        jQuery('.wpie_loader').addClass('wpie_hidden');
}
//jQuery(document).on('change', '.wpie_handle_items', function () {
//
//        if (jQuery(this).val() == "new")
//        {
//                jQuery('.wpie_import_existing_item_section').hide();
//        } else {
//
//                jQuery('.wpie_import_existing_item_section').show();
//        }
//
//});
jQuery(document).on('change', '.wpie_import_type_select', function () {

        if (!wpieValidateImportExt())
        {
                return false;
        }

        var importType = jQuery(this).val();

        jQuery('.wpie_content_data').attr("class", "wpie_content_data wpie_" + importType);

        var task_list = {

                "wpieGetTemplates": wpiePluginSettings.wpieLocalizeText.wpieGetTemplatesText,
                "wpieGetSettingsList": wpiePluginSettings.wpieLocalizeText.wpieGetSettingList,
                "wpieGetFields": wpiePluginSettings.wpieLocalizeText.wpieGetFieldsText,
        }

        wpieSetProcessLoader(task_list);

        wpieImportGetTemplates();

        wpieImportGetSettings();

        if (importType == "taxonomies")
        {
                jQuery('.wpie_taxonomies_types_wrapper').slideDown();
        } else {
                jQuery('.wpie_taxonomies_types_wrapper').slideUp();

        }
        wpieGetImportFields(importType);

});

function wpieValidateImportExt() {

        var importType = jQuery('.wpie_import_type_select').val();

        var isValid = true;

        var errorMsg = "";

        if (!Array.isArray(wpiePluginSettings.wpieExtensions)) {

                var wpieExt = [];
                if (!jQuery.isEmptyObject(wpiePluginSettings.wpieExtensions)) {
                        jQuery.each(wpiePluginSettings.wpieExtensions, function (ext) {

                                wpieExt.push(ext);
                        });
                }
                wpiePluginSettings.wpieExtensions = wpieExt;
        }
        if (jQuery.inArray(importType, ["shop_customer", "shop_order", "shop_coupon", "product", "product_attributes", 'product_reviews']) !== -1) {

                errorMsg = wpiePluginSettings.wpieLocalizeText.wpieImportPremiumFeatureOnly;

                isValid = false;
        } else if (typeof wpiePluginSettings.isWcActive != 'undefined' && wpiePluginSettings.isWcActive != 1 && jQuery.inArray(importType, ["shop_customer", "shop_order", "shop_coupon", "product", "product_attributes"]) !== -1) {

                errorMsg = wpiePluginSettings.wpieLocalizeText.ActivateWc;

                isValid = false;

        } else if (importType == "users") {

                if (wpiePluginSettings.wpieExtensions.indexOf("wpie_user_import") < 0)
                {
                        errorMsg = wpiePluginSettings.wpieLocalizeText.wpieImportUserExtDisableText;

                        isValid = false;
                }
        } else if (importType == "shop_customer") {

                if (wpiePluginSettings.wpieExtensions.indexOf("wpie_wc_import") < 0) {

                        errorMsg = wpiePluginSettings.wpieLocalizeText.wpieImportWCExtDisableText;

                        isValid = false;
                } else if (wpiePluginSettings.wpieExtensions.indexOf("wpie_user_import") < 0) {

                        errorMsg = wpiePluginSettings.wpieLocalizeText.wpieImportUserExtDisableText;

                        isValid = false;

                }
        } else if (importType == "shop_order" || importType == "shop_coupon" || importType == "product") {

                if (wpiePluginSettings.wpieExtensions.indexOf("wpie_wc_import") < 0) {

                        errorMsg = wpiePluginSettings.wpieLocalizeText.wpieImportWCExtDisableText;

                        isValid = false;
                }
        } else if (importType == "product_attributes") {

                if (wpiePluginSettings.wpieExtensions.indexOf("wpie_product_attribute_import") < 0) {

                        errorMsg = wpiePluginSettings.wpieLocalizeText.wpieImportPAExtDisableText;

                        isValid = false;
                }
        }

        if (isValid == false)
        {
                jQuery('.wpie_import_type_select').val("post").trigger('chosen:updated');

                if (importType == "taxonomies")
                {
                        jQuery('.wpie_taxonomies_types_wrapper').slideDown();
                } else {
                        jQuery('.wpie_taxonomies_types_wrapper').slideUp();

                }
                wpieGetImportFields("post");

                wpieSetErrorMsg(errorMsg);

                return false;
        }

        return true;

}
jQuery(document).on('change', '.wpie_upload_file_list', function () {

        wpieSetProcessLoader({
                "wpieValidateUpload": wpiePluginSettings.wpieLocalizeText.wpieParingUploadFileText,
                "wpieGetConfig": wpiePluginSettings.wpieLocalizeText.wpieGetConfigText,
                "wpieGetFields": wpiePluginSettings.wpieLocalizeText.wpieGetFieldsText,
                "wpieGetRecords": wpiePluginSettings.wpieLocalizeText.wpieGetRecordsText
        });

        wpiePluginSettings.importData.activeFile = jQuery(this).val();

        wpieValidateUploadedFile(true, ",");

});
jQuery(document).on('click', '.wpie_layout_tag_wrapper', function () {

        if (!jQuery(this).hasClass('wpie_active')) {

                var task_list = {
                        "wpieGetRecords": wpiePluginSettings.wpieLocalizeText.wpieGetRecordsText
                }

                wpieSetProcessLoader(task_list);

                jQuery('.wpie_element_nav_element').val(1);

                jQuery('.wpie_layout_tag_wrapper.wpie_active').removeClass('wpie_active');

                jQuery(this).addClass('wpie_active');

                var wpie_root = jQuery(this).find('.wpie_layout_tag_name').html();

                var wpie_xpath = "/" + wpie_root;

                jQuery('.wpie_xpath').val(wpie_xpath);

                wpieGetFilteredRecords(0, 1, wpie_xpath, wpie_root, true);
        }
});
jQuery(document).on('click', '.wpie_data_element_nav_next', function () {

        var current_element = parseInt(jQuery('.wpie_element_nav_element').val());

        var totalElement = parseInt(jQuery('.wpie_data_element_action_nav_total').html());

        if (current_element < totalElement) {

                current_element++;

                var task_list = {
                        "wpieGetRecords": wpiePluginSettings.wpieLocalizeText.wpieGetRecordsText
                };

                wpieSetProcessLoader(task_list);

                var current_element = parseInt(jQuery('.wpie_element_nav_element').val()) + 1;

                wpieGotoRecord(current_element);
        }
});
jQuery(document).on('click', '.wpie_data_element_nav_prev', function () {

        if (parseInt(jQuery('.wpie_element_nav_element').val()) == 1) {
                return false;
        }

        var task_list = {
                "wpieGetRecords": wpiePluginSettings.wpieLocalizeText.wpieGetRecordsText
        };

        wpieSetProcessLoader(task_list);

        var current_element = parseInt(jQuery('.wpie_element_nav_element').val()) - 1;

        wpieGotoRecord(current_element);

});
jQuery(document).on('blur', '.wpie_element_nav_element', function () {

        var task_list = {
                "wpieGetRecords": wpiePluginSettings.wpieLocalizeText.wpieGetRecordsText
        };

        wpieSetProcessLoader(task_list);

        var activeFile = wpiePluginSettings.importData.activeFile;

        var count = wpiePluginSettings.importData[activeFile].count;

        var current_element = parseInt(jQuery(this).val());

        if (count < current_element || current_element < 1)
        {
                current_element = 1;
        }

        wpieGotoRecord(current_element);

});
function wpieGotoRecord(element)
{
        var activeFile = wpiePluginSettings.importData.activeFile;

        var root = wpiePluginSettings.importData[activeFile].root;

        var xpath = wpiePluginSettings.importData[activeFile].xpath;

        var count = wpiePluginSettings.importData[activeFile].count;

        if (element >= 1 && element <= count) {

                wpieGetFilteredRecords(element - 1, 1, xpath, root, false);
        } else {

                wpieUpdateProcessLoader("wpieGetRecords");

        }

}
function wpieGenerateTableView(wpie_data) {

        var table = jQuery('<table>');

        table.attr({'width': "100%", "cellspacing": 0}).addClass("wpie_import_data_preview table table-striped table-bordered");
        var thead = jQuery('<thead>');

        if ((typeof wpie_data === "object") && (wpie_data !== null))
        {
                if ((typeof wpie_data.value === "object") && (wpie_data.value !== null)) {
                        jQuery.each(wpie_data.value, function (key, data) {

                                var path = typeof data.path != 'undefined' ? data.path : "";
                                var label = typeof data.name != 'undefined' ? data.name : "";
                                var value = typeof data.value != 'undefined' ? data.value : "";

                                var tr = jQuery('<tr>');

                                var th = jQuery('<th>');
                                var thDiv = jQuery('<div>').attr("data_value", path).addClass("wpie_tag_table_header_data").text(label);
                                th.addClass('wpie_tag_header_wrapper').append(thDiv);




                                var more = '';
                                var fullText = '';

                                if (value != "" && value.length > 200)
                                {
                                        more = jQuery("<span>");

                                        more.addClass("wpie_xml_data_more wpie_show_more_data").text(wpiePluginSettings.wpieLocalizeText.showMoreText);

                                        fullText = jQuery("<div>").addClass("wpie_tag_content_full_text").text(value);

                                        value = value.substring(0, 200);

                                }


                                var td = jQuery('<td>');
                                var tdDiv = jQuery('<div>').addClass("wpie_tag_table_contant_data wpie_tag_content_text").text(value);
                                td.addClass('wpie_tag_contant_data_wrapper').append(tdDiv).append(fullText).append(more);

                                tr.append(th).append(td);
                                thead.append(tr);
                        });
                }
        }
        table.append(thead);
        var tbody = jQuery('<tbody>');
        table.append(tbody);

        var html = jQuery('<div>').append(table).html();
        return html;
}
function wpieGenerateXmlTagView(wpie_data)
{

        var tag_content = "";

        if ((typeof wpie_data == "object") && (wpie_data !== null))
        {
                var tag_data = "";

                var tag_value_data = "";

                var tag_container = "";

                var tag_open_class = "";

                if ((typeof wpie_data.value == "object") && (wpie_data.value !== null))
                {
                        jQuery.each(wpie_data.value, function (key, data) {

                                tag_data += wpieGenerateXmlTagView(data);

                        });

                        tag_container = " wpie_tag_section_container";

                        tag_open_class = " wpie_tag_has_child";

                } else {

                        if (typeof wpie_data.value != 'undefined') {
                                tag_value_data += wpie_data.value;
                        }
                }

                var tag_name = wpie_data.name;

                var tag_xpath = wpie_data.path;

                var data_attr = "";

                if ((typeof wpie_data["@attributes"] == "object") && (wpie_data["@attributes"] !== null) && (!jQuery.isEmptyObject(wpie_data["@attributes"])))
                {
                        jQuery.each(wpie_data["@attributes"], function (attr_key, attr_value) {

                                data_attr += '<span class="wpie_tag_attr" >';

                                data_attr += '<span class="wpie_tag_attr_name" data_value="' + tag_xpath + '/@' + attr_key + '"> ' + attr_key + '</span> = <span class="wpie_tag_attr_value">"' + attr_value + '" </span>';

                                data_attr += '</span>';
                        });
                }

                var icon_data = '';
                var more = '';
                var fullText = '';

                if ((tag_data != "" && tag_data.length > 40) || (tag_value_data != "" && tag_value_data.length > 40))
                {
                        icon_data = '<i aria-hidden="true" class="fas fa-plus wpie_layout_tag_icon wpie_layout_expand_icon"></i><i aria-hidden="true" class="fas fa-minus wpie_layout_collapsed_icon wpie_layout_tag_icon"></i>';

                        if (tag_value_data != "" && tag_value_data.length > 200)
                        {
                                more = jQuery("<span>");

                                more.addClass("wpie_xml_data_more wpie_show_more_data").text(wpiePluginSettings.wpieLocalizeText.showMoreText);

                                fullText = jQuery("<div>").addClass("wpie_tag_content_full_text").text(tag_value_data);

                                tag_value_data = tag_value_data.substring(0, 200);

                        }
                }

                var container = jQuery("<div>");
                container.addClass("wpie_tag_outer_wrapper");

                var opening_span = jQuery("<span>");
                opening_span.addClass("wpie_tag_name").attr("data_value", tag_xpath).text(tag_name);

                var opening_tag = jQuery("<div>");
                opening_tag.addClass("wpie_tag wpie_opening " + tag_open_class).append(icon_data).append("&lt;").append(opening_span).append(data_attr).append("&gt;");


                var tag_content = jQuery("<div>");
                tag_content.addClass("wpie_tag_content " + tag_container);

                if (tag_value_data === "") {
                        tag_content.html(tag_data);
                } else {
                        var textData = jQuery("<div>").addClass("wpie_tag_content_text").text(tag_value_data);
                        tag_content.append(textData).append(fullText).append(more);
                }


                var closing_span = jQuery("<span>");
                closing_span.addClass("wpie_tag_name").text(tag_name);

                var tag_closing = jQuery("<div>");
                tag_closing.addClass("wpie_tag wpie_closing").append("&lt;/").append(closing_span).append(data_attr).append("&gt;");

                container.append(opening_tag).append(tag_content).append(tag_closing);

                tag_content = jQuery("<div>").append(container).html();
//                
//                tag_content += '<div class="wpie_tag_outer_wrapper">';
//
//                tag_content += '<div class="wpie_tag wpie_opening ' + tag_open_class + '">' + icon_data + '&lt;<span class="wpie_tag_name"  data_value="' + tag_xpath + '">' + tag_name + '</span>' + data_attr + '&gt;</div>';
//
//                tag_content += '<div class="wpie_tag_content' + tag_container + '">' + tag_data + '</div>';
//
//                tag_content += '<div class="wpie_tag wpie_closing">&lt;/<span class="wpie_tag_name" >' + tag_name + '</span>&gt;</div>';
//
//                tag_content += '</div>';
        }

        return tag_content;
}
jQuery(document).on('click', '.wpie_tag.wpie_opening', function () {

        if (jQuery(this).find('.wpie_layout_tag_icon').length) {

                if (jQuery(this).hasClass('wpie_collapsed')) {
                        jQuery(this).removeClass('wpie_collapsed');
                } else
                {
                        jQuery(this).addClass('wpie_collapsed');
                }
        }
        return false;
});
jQuery(document).on('click', '.wpie_save_add_rule_btn', function () {


        wpieShowLoader();

        var isValidate = wpieAddNewImportRule();

        if (isValidate) {

                jQuery('.wpie_element_list').val("").trigger('chosen:updated');

                jQuery('.wpie_element_rule').val("").trigger('chosen:updated');

                jQuery('.wpie_element_value').val("");
        }

        wpieHideLoader();


});
function wpieAddNewImportRule()
{
        var node = jQuery('.wpie_element_list').val();

        var nodeText = jQuery('.wpie_element_list').find('option:selected').text();

        var condition = jQuery('.wpie_element_rule').val();

        var conditionText = jQuery('.wpie_element_rule').find('option:selected').text();

        var value = jQuery('.wpie_element_value').val();

        if (node == "")
        {
                wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.selectElementText);

                return false;
        } else if (condition == "")
        {
                wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.selectExportRuleText);

                return false;
        }

        var rule_count = jQuery('.wpie_filter_data_rule').length;

        if (rule_count > 0)
        {
                var random_number = Math.floor(Math.random() * 100000000 + 1);

                var cond_data = '<div class="wpie_rule_condition_wrapper">' +
                        '<input type="radio" class="wpie_radio wpie_rule_clause" checked="checked" name="wpie_content_data_rule_condition_' + random_number + '" id="wpie_content_data_rule_condition_and_' + random_number + '" value="and"/>' +
                        '<label for="wpie_content_data_rule_condition_and_' + random_number + '" class="wpie_radio_label">' + wpiePluginSettings.wpieLocalizeText.andText + '</label>' +
                        '</div>' +
                        '<div class="wpie_rule_condition_wrapper wpie_rule_condition_or_wrapper">' +
                        '<input type="radio" class="wpie_radio wpie_rule_clause" name="wpie_content_data_rule_condition_' + random_number + '" id="wpie_content_data_rule_condition_or_' + random_number + '" value="or"/>' +
                        '<label for="wpie_content_data_rule_condition_or_' + random_number + '" class="wpie_radio_label">' + wpiePluginSettings.wpieLocalizeText.orText + '</label>' +
                        '</div>';
                jQuery('.wpie_filter_rule_table .wpie_filter_data_rule').last().find('.wpie_filter_data_rule_cond_data').html(cond_data);

        } else {
                jQuery('.wpie_apply_rule_wrapper').show();
        }

        var html = '<tr class="wpie_filter_data_rule" >' +
                '<td class="wpie_filter_rule_list wpie_filter_data_rule_node" wpie_data="' + node + '">' + nodeText + '</td>' +
                '<td class="wpie_filter_rule_list wpie_filter_data_rule_cond" wpie_data="' + condition + '">' + conditionText + '</td>' +
                '<td class="wpie_filter_rule_list wpie_filter_data_rule_val">"' + value + '"</td>' +
                '<td class="wpie_filter_rule_list wpie_filter_data_rule_cond_data"></td>' +
                '<td class="wpie_filter_rule_list wpie_filter_data_rule_action"><i class="fas fa-trash wpie_trash_general_btn_icon wpie_rule_trash_btn " aria-hidden="true"></i></td>' +
                '</tr>';

        jQuery('.wpie_filter_rule_table').append(html);

        return true;

}
function wpieXpathBuilder(rules_box, lvl) {

        var filter = '';

        var activeFile = wpiePluginSettings.importData.activeFile;

        var root_element = wpiePluginSettings.importData[activeFile].root;

        if (lvl && rules_box.length > 1) {
                filter += ' (';
        }

        rules_box.each(function () {

                var node = jQuery(this).find('.wpie_filter_data_rule_node').attr("wpie_data");

                var condition = jQuery(this).find('.wpie_filter_data_rule_cond').attr("wpie_data");

                var value = jQuery(this).find('.wpie_filter_data_rule_val').html();

                value = value.slice(1, -1);

                if (jQuery(this).find('.wpie_rule_clause:checked').length > 0)
                {
                        var clause = jQuery(this).find('.wpie_rule_clause:checked').val();
                } else {
                        var clause = false;
                }
                var is_attr = false;

                var node_name = "";

                var attr_name = "";

                if (node.indexOf('@') != -1) {

                        is_attr = true;

                        node_name = node.split('@')[0];

                        attr_name = node.split('@')[1];
                }

                if (is_attr) {
                        filter += (node_name == root_element) ? '' : node_name.replace(/->/g, '/');
                } else {
                        filter += node.replace(/->/g, '/');
                }

                if (is_attr) {
                        filter += '@' + attr_name;
                }

                switch (condition) {
                        case 'equals':
                                filter += ' = "%s"';
                                break;
                        case 'not_equals':
                                filter += ' != "%s"';
                                break;
                        case 'greater':
                                filter += ' > "%s"';
                                break;
                        case 'equals_or_greater':
                                filter += ' >= "%s"';
                                break;
                        case 'less':
                                filter += ' < "%s"';
                                break;
                        case 'equals_or_less':
                                filter += ' <= "%s"';
                                break;
                        case 'contains':
                                filter += '[contains(.,"%s")]';
                                break;
                        case 'not_contains':
                                filter += '[not(contains(.,"%s"))]';
                                break;
                        case 'is_empty':
                                filter += '[not(string())]';
                                break;
                        case 'is_not_empty':
                                filter += '[string()]';
                                break;
                }

                filter = filter.replace('%s', value);


                if (clause) {
                        filter += ' ' + clause + ' ';
                }


                if (lvl && rules_box.length > 1) {
                        filter += ') ';
                }
        });

        return filter;

}
jQuery(document).on('change', '.wpie_import_file_processing', function () {

        if (jQuery(this).val() == "chunk") {
                jQuery('.wpie_iteration_process_wrapper').slideDown();

        } else {
                jQuery('.wpie_iteration_process_wrapper').slideUp();
        }
});
jQuery(document).on('change', '.wpie_item_cf_option', function () {

        if (jQuery(this).val() == "serialized") {
                jQuery(this).closest('tr').find('.wpie_cf_serialized_data_btn').show();
                jQuery(this).closest('tr').find('.wpie_cf_normal_data').hide();

        } else {
                jQuery(this).closest('tr').find('.wpie_cf_serialized_data_btn').hide();
                jQuery(this).closest('tr').find('.wpie_cf_normal_data').show();
        }
});
jQuery(document).on('click', '.wpie_cf_serialized_data_btn', function () {

        wpieAddSerialyzeLayout(jQuery(this), true);
});
function wpieAddSerialyzeLayout($this, show) {

        $this.closest(".wpie_cf_table").find('.wpie_cf_child_data').hide();

        jQuery('.wpie-cf-activated').removeClass("wpie-cf-activated");

        $this.closest("tr").addClass("wpie-cf-activated");

        if ($this.closest("tr").find(".wpie_cf_child_data .wpie_cf_table").length >= 1) {
                if (show === true) {
                        $this.closest("tr .wpie_item_cf_value_wrapper").children('.wpie_cf_child_data').show();
                }
        } else {

                var randstring = wpieRand(20);

                $this.closest(".wpie_cf_table").find("select").chosen("destroy");

                var html = jQuery('<div>').append($this.closest(".wpie_cf_table").clone()).html();

                var child = $this.closest("tr .wpie_item_cf_value_wrapper").children('.wpie_cf_child_data');

                child.html(html);

                if (show === true) {
                        child.show();
                }
                child.find('tbody tr:not(.wpie-cf-activated)').remove();

                child.find('tbody tr').first().attr('wpie_row_id', randstring);

                var parentName = child.find('.wpie_item_cf_value').first().attr('name');

                parentName = wpieReplaceAll(parentName, "[value]", "[values]");

                child.find('.wpie_item_cf_name').first().attr("name", parentName + "[" + randstring + "][name]").val("");

                child.find('.wpie_item_cf_value').first().attr("name", parentName + "[" + randstring + "][value]").val("");

                child.find('.wpie_item_cf_option').first().attr("name", parentName + "[" + randstring + "][option]").val("normal").trigger("change");

                $this.closest(".wpie_cf_table").find("select").chosen();
        }
}
jQuery(document).on('click', '.wpie_cf_serialized_close_btn', function () {

        jQuery('.wpie_cf_serialized_data').hide();

});
jQuery(document).on('click', '.wpie_cf_add_btn', function () {

        var closest = jQuery(this).closest("table");

        wpieAddNewCF(closest)

});
jQuery(document).on('click', '.wpie_cf_close_btn', function () {

        jQuery(this).closest(".wpie_cf_child_data").hide();

});

function wpieRand(length) {
        var result = '';
        var characters = 'abcdefghijklmnopqrstuvwxyz0123456789';
        var charactersLength = characters.length;
        for (var i = 0; i < length; i++) {
                result += characters.charAt(Math.floor(Math.random() * charactersLength));
        }
        return result;
}
function wpieAddNewCF(closest)
{
        var wpie_data_row = closest.children("tbody").children('.wpie_data_row').last();

        var row_id = wpie_data_row.attr('wpie_row_id');

        var randstring = wpieRand(20);

        wpie_data_row.find('.wpie_content_data_select').chosen("destroy");

        var html = jQuery('<div>').append(wpie_data_row.clone()).html();

        html = wpieReplaceAll(html, row_id, randstring);

        wpie_data_row.find('.wpie_content_data_select').chosen();

        closest.children("tbody").first().append(html);

        var wpie_new_data_row = closest.children("tbody").children('.wpie_data_row').last();

        wpie_new_data_row.children('.wpie_item_cf_value_wrapper').children('.wpie_cf_child_data').html("");

        wpie_new_data_row.children('.wpie_item_cf_option_wrapper').find('.wpie_content_data_select').val('normal').trigger("change").chosen();

        wpie_new_data_row.children('.wpie_item_cf_name_wrapper').find('.wpie_item_cf_name').val('');

        wpie_new_data_row.children('.wpie_item_cf_value_wrapper').children('.wpie_cf_normal_data').find('.wpie_item_cf_value').val('');

}
function wpieEscapeRegExp(string) {

        if (typeof string != "undefined" && typeof string !== null) {
                return string.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
        }

}
function wpieReplaceAll(str, term, replacement) {

        if (typeof str != "undefined" && typeof str !== null) {
                return str.replace(new RegExp(wpieEscapeRegExp(term), 'g'), replacement);
        }

        return str;
}
jQuery(document).on('click', '.wpie_cf_serialized_add_btn', function () {

        var closest_element = jQuery(this).closest('.wpie_cf_serialized_wrapper');

        wpieAddNewSerializeCF(closest_element);

});
function wpieAddNewSerializeCF(closest_element)
{
        var serialize_key_name = closest_element.find('.wpie_cf_serialized_option_container .wpie_cf_serialized_option_wrapper').last().find('.wpie_item_cf_serialize_key').attr("name");

        var serialize_value_name = closest_element.find('.wpie_cf_serialized_option_container .wpie_cf_serialized_option_wrapper').last().find('.wpie_item_cf_serialize_value').attr("name");

        var count = parseInt(serialize_key_name.substring(serialize_key_name.lastIndexOf("[") + 1, serialize_key_name.lastIndexOf("]")));

        var replacement = "][" + (count + 1) + "]";

        var find = "][" + count + "]";

        serialize_key_name = serialize_key_name.replace(find, replacement);

        serialize_value_name = serialize_value_name.replace(find, replacement);

        var html = closest_element.find('.wpie_cf_serialized_option_container .wpie_cf_serialized_option_wrapper').first().clone();

        closest_element.find('.wpie_cf_serialized_option_container').append(html);

        closest_element.find('.wpie_cf_serialized_option_container .wpie_cf_serialized_option_wrapper').last().find('.wpie_item_cf_serialize_key').val('').attr("name", serialize_key_name);

        closest_element.find('.wpie_cf_serialized_option_container .wpie_cf_serialized_option_wrapper').last().find('.wpie_item_cf_serialize_value').val('').attr("name", serialize_value_name);
}
jQuery(document).on('click', '.wpie_remove_cf_btn', function () {

        if (jQuery(this).closest("tbody").children("tr").length <= 1)
        {

                var closest = jQuery(this).closest("table");

                wpieAddNewCF(closest);
        }

        jQuery(this).closest('tr').remove();

});
jQuery(document).on('click', '.wpie_trash_cf_serialized_btn_wrapper', function () {

        var closest_element = jQuery(this).closest('.wpie_cf_serialized_wrapper');

        if (closest_element.find('.wpie_cf_serialized_option_wrapper').length <= 1)
        {
                wpieAddNewSerializeCF(closest_element);
        }

        jQuery(this).closest('.wpie_cf_serialized_option_wrapper').remove();

});
jQuery(document).on('click', '.wpie_rule_trash_btn', function () {

        jQuery(this).closest('tr').remove();

        if (jQuery('.wpie_filter_data_rule').length >= 1) {

                jQuery('.wpie_filter_data_rule').last().find('.wpie_filter_data_rule_cond_data').html("");
        } else {
                jQuery('.wpie_apply_rule_wrapper').hide();
        }
});
jQuery(document).on('click', '.wpie_apply_rule_btn', function () {

        var task_list = {
                "wpieGetRecords": wpiePluginSettings.wpieLocalizeText.wpieGetRecordsText
        }

        wpieSetProcessLoader(task_list);

        var activeFile = wpiePluginSettings.importData.activeFile;

        var xpath = jQuery('.wpie_xpath').val();

        var filter = '[';

        filter += wpieXpathBuilder(jQuery('.wpie_filter_data_rule'), 0);

        filter += ']';

        wpiePluginSettings.importData[activeFile].xpath = xpath.split('[')[0] + filter;

        jQuery('.wpie_xpath').val(wpiePluginSettings.importData[activeFile].xpath);

        wpieGetFilteredRecords(0, 1, wpiePluginSettings.importData[activeFile].xpath, wpiePluginSettings.importData[activeFile].root, true);

});

jQuery(document).on('blur', '.wpie_xpath', function () {

        var xpath = jQuery(this).val();

        var activeFile = wpiePluginSettings.importData.activeFile;

        if (wpiePluginSettings.importData[activeFile].xpath != xpath)
        {
                var task_list = {
                        "wpieGetRecords": wpiePluginSettings.wpieLocalizeText.wpieGetRecordsText
                }

                wpieSetProcessLoader(task_list);

                wpiePluginSettings.importData[activeFile].xpath = xpath;

                wpieGetFilteredRecords(0, 1, wpiePluginSettings.importData[activeFile].xpath, wpiePluginSettings.importData[activeFile].root, true);
        }
});

jQuery.fn.wpieInsertAtCaret = function () {

        if (!this.length)
        {
                return this;
        }

        var $self = this;

        var _w;

        var _dbl = 0;

        var $drag = jQuery('.wpie_drag_element');

        $drag.length || ($drag = jQuery('<input type="text" class="wpie_drag_element" readonly="readonly" />'));

        $drag.appendTo(document.body).mousedown(function (e) {

                if (_dbl)
                        return;
                var _x = e.pageX - $drag.offset().left;
                var _y = e.pageY - $drag.offset().top;
                if (_x < 4 || _y < 4 || $drag.width() - _x < 0 || $drag.height() - _y < 0) {
                        return;
                }

                $drag.css('opacity', 1);
                $drag.select();

                _dbl = true;
                setTimeout(function () {
                        _dbl = false;
                }, 400);

        }).mouseup(function () {

                $drag.css('opacity', 0).css('width', _w);
                $drag.blur();

        });

        jQuery(document).mousemove(function () {
                if (parseInt($drag.css('opacity')) != 0) {
                        setTimeout(function () {
                                $drag.css('opacity', 0);
                        }, 50);
                        setTimeout(function () {
                                $drag.css('width', _w);
                        }, 500);
                }
        });

        $self.each(function () {

                var $this = jQuery(this);

                var xpath = '{' + $this.attr('data_value') + '}';

                $this.mouseover(function (e) {
                        $drag.val(xpath).offset({left: $this.offset().left - 2, top: $this.offset().top - 2}).width(_w = $this.width() + 8).height($this.height());
                });
        }).eq(0).mouseover();
}
jQuery(document).on('click', '.wpie_import_step_btn', function () {

        var importType = jQuery('.wpie_import_type_select').val();

        if ((jQuery(this).hasClass("wpie_import_step3_btn") && wpieIsValidTime() === false) || jQuery(this).hasClass("wpie_import_step6_btn")) {
                return false;
        } else if (jQuery(this).hasClass("wpie_import_step2_btn") && jQuery.inArray(importType, ["shop_customer", "shop_order", "shop_coupon", "product", "product_attributes", 'product_reviews']) !== -1) {

                wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.wpieImportPremiumFeatureOnly);

                return false;
        }

        jQuery('.wpie_import_step').hide();

        jQuery("." + jQuery(this).attr("wpie_show")).show();

        wpieScrollTop();

});
jQuery(document).on('click', '.wpie_import_step3_back', function () {

        jQuery('.wpie_field_mapping_data_container').hide();
});
jQuery(document).on('click', '.wpie_import_step3_btn,.wpie_import_step5_back', function () {

        jQuery('.wpie_field_mapping_data_container').show();
});

jQuery(document).on('click', '.wpie_import_step6_btn', function () {

        if (jQuery('.wpie_item_update_specific').is(":checked")) {

                if (jQuery('.wpie_item_update_field:checked').length < 1)
                {
                        jQuery('.wpie_update_item_data_container').addClass("wpie_required");

                        wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.chooseDataUpdate);

                        return false;
                }
        }

        jQuery('.wpie_update_item_data_container').removeClass("wpie_required");

        jQuery('.wpie_import_step').hide();

        jQuery('.wpie_field_mapping_data_container').hide();

        jQuery("." + jQuery(this).attr("wpie_show")).show();

        wpieScrollTop();
});
jQuery(document).on('change', '.wpie_item_update_specific', function () {

        wpieValidateUpdateFields();

});
jQuery(document).on('change', '.wpie_item_update_all', function () {

        wpieValidateUpdateFields();

});
jQuery(document).on('change', '.wpie_item_update_field', function () {

        wpieValidateUpdateFields();

});
function wpieValidateUpdateFields() {

        if (jQuery('.wpie_item_update_specific').is(":checked")) {

                if (jQuery('.wpie_item_update_field:checked').length < 1) {

                        jQuery('.wpie_update_item_data_container').addClass("wpie_required");

                        return true;
                }
        }

        jQuery('.wpie_update_item_data_container').removeClass("wpie_required");


}
jQuery(document).on('click', '.wpie_import_step3_btn', function () {

        if (!wpieValidateProcess())
        {
                return false;
        }
        var activeFile = wpiePluginSettings.importData.activeFile;

        if (wpiePluginSettings.importData[activeFile].count == 0) {

                wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.wpieNoRecordsFoundText);

                return false;
        }

        jQuery('.wpie_import_step').hide();

        jQuery("." + jQuery(this).attr("wpie_show")).show();

        wpieScrollTop();

});
function wpieIsValidTime() {
        return true;

}
jQuery(document).on('click', '.wpie_import_step1_btn', function () {

        var error = false;

        if (jQuery('.wpie_upload_section_wrapper:visible .wpie_upload_file_list:checked').length)
        {
                var activeFile = jQuery('.wpie_upload_section_wrapper:visible .wpie_upload_file_list:checked').val();

                wpiePluginSettings.importData.activeFile = activeFile;

                if (typeof wpiePluginSettings.importData[activeFile] == 'undefined') {
                        error = true;
                } else if (typeof wpiePluginSettings.importData[activeFile].fileName == 'undefined') {
                        error = true;
                }

        } else {
                error = true;
        }

        if (error) {

                wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.wpieChooseValidFileText);

                return false;
        }

        jQuery('.wpie_import_step').hide();

        jQuery("." + jQuery(this).attr("wpie_show")).show();

        wpieScrollTop();

});
function wpieScrollTop()
{
        jQuery("html, body").animate({
                scrollTop: 0
        }, 300);
}

jQuery(document).on('scroll', function () {

        if (jQuery('.wpie_field_mapping_data_wrapper').is(':visible')) {

                var tagOffset = jQuery('.wpie_field_mapping_data_container').offset();

                if (jQuery(document).scrollTop() > parseInt(tagOffset.top - 65)) {

                        var containerWidth = jQuery('.wpie_field_mapping_data_container').css('width');

                        jQuery('.wpie_field_mapping_data_wrapper').css({'width': containerWidth, 'top': '60px', 'position': 'fixed'});

                        jQuery('.wpie_field_mapping_data_wrapper').find('.wpie_data_fields_container').css({'max-height': (jQuery(window).height() - 160) + 'px'});

                } else {

                        var containerWidth = jQuery('.wpie_field_mapping_data_container').css('width');

                        jQuery('.wpie_field_mapping_data_wrapper').css({'width': '', 'top': '', 'position': ''});

                        jQuery('.wpie_field_mapping_data_wrapper').find('.wpie_data_fields_container').css({'max-height': ''});
                }
        }
});
jQuery(document).on('click', '.wpie_import_btn', function () {

        if (wpieIsData() === false)
        {
                wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.wpieInvalidLicense);

                return false;
        }
        wpieInitImport("import");
});
function wpieInitImport(process)
{
        var task_list = {
                "wpieSaveSettings": wpiePluginSettings.wpieLocalizeText.wpieSaveSettingsText
        };

        wpieSetProcessLoader(task_list);

        var activeFile = wpiePluginSettings.importData.activeFile;

        var is_new_items = 1;

        if (jQuery(".wpie_import_type.wpie_active").hasClass('wpie_update_item'))
        {
                is_new_items = 0;
        }

        var wpie_import_id = wpiePluginSettings.wpieImportId;

        var xpath = wpiePluginSettings.importData[activeFile].xpath;

        var root = wpiePluginSettings.importData[activeFile].root;

        var bg = 0;

        if (process == "bg")
        {
                bg = "1";
        }

        var form_data = jQuery('.wpie_import_frm').serialize();

        jQuery.ajax({
                url: wpiePluginSettings.wpieAjaxURL,
                type: 'POST',
                data: "action=wpie_import_update_data&wpie_import_id=" + wpie_import_id + "&bg=" + bg + "&xpath=" + xpath + "&root=" + root + "&is_new_items=" + is_new_items + "&" + form_data,
                dataType: 'json',
                async: true,
                success: function (results) {

                        if (results.status == "error") {

                                wpieSetErrorMsg(results.message);

                                return false;

                        }

                        wpieUpdateProcessLoader("wpieSaveSettings");

                        if (process == "import") {

                                wpieResetImportProcess();

                                wpiePluginSettings.importData.processStatus = "processing";

                                jQuery('.wpie_import_step:visible').hide();

                                jQuery(".wpie_import_step7").show();

                                wpieScrollTop();

                                wpieImportData();
                        } else if (process == "bg") {

                                jQuery('.wpie_import_bg_set').modal({backdrop: 'static', keyboard: false, show: true});

                                return false;
                        }
                },
                error: function (jqXHR, exception) {

                        wpieHandleAjaxError(jqXHR, exception);
                }
        });
}
function wpieResetImportProcess()
{
        var activeFile = wpiePluginSettings.importData.activeFile;

        jQuery('.wpie_import_process_text_header').text(wpiePluginSettings.wpieLocalizeText.wpieImportProcessingText);

        jQuery('.wpie_import_process_text_notice').text(wpiePluginSettings.wpieLocalizeText.wpieImportProcessingNoticeText);

        jQuery(".wpie_import_filename").html(wpiePluginSettings.importData[activeFile].fileName);

        jQuery(".wpie_import_filesize").html(wpiePluginSettings.importData[activeFile].fileSize);

        jQuery('.wpie_import_process_per').css("width", "auto").text("0%");

        jQuery('.wpie_import_created').text("0");

        jQuery('.wpie_import_updated').text("0");

        jQuery('.wpie_import_skipped').text("0");

        jQuery('.wpie_import_processing_total').text("0");

        jQuery('.wpie_import_time_elapsed').text("00:00:00");

        jQuery('.wpie_import_total').text(wpiePluginSettings.importData[activeFile].count);

        if (typeof wpiePluginSettings.importData.importInterval != 'undefined') {
                clearInterval(wpiePluginSettings.importData.importInterval);
        }

        wpiePluginSettings.importData.importIntervalSec = 0;

        wpiePluginSettings.importData.importInterval = setInterval(function () {
                jQuery('.wpie_import_time_elapsed').html(wpieElapsedTimeString(wpiePluginSettings.importData.importIntervalSec++));
        }, 1000);

}
function wpieElapsedTimeString(Seconds) {

        var hours = Math.floor(Seconds / 3600);

        Seconds = Seconds % 3600;

        var minutes = Math.floor(Seconds / 60);

        Seconds = Seconds % 60;

        var seconds = Math.floor(Seconds);

        hours = wpiePrettyTimeString(hours);

        minutes = wpiePrettyTimeString(minutes);

        seconds = wpiePrettyTimeString(seconds);

        return hours + ":" + minutes + ":" + seconds;

}
function wpiePrettyTimeString(num) {
        return (num < 10 ? "0" : "") + num;
}
function wpieObjectifyForm(formArray, other_option) {

        var returnArray = {};

        jQuery.each(formArray, function (key, data) {

                returnArray[data.name] = data.value;
        });

        jQuery.each(other_option, function (new_key, new_data) {

                returnArray[new_key] = new_data;
        });

        return returnArray;
}

function wpieImportData()
{
        if (wpiePluginSettings.importData.processStatus == "processing") {

                wpiePluginSettings.importData.processing = true;

                jQuery.ajax({
                        url: wpiePluginSettings.wpieAjaxURL,
                        type: 'GET',
                        data: "action=wpie_import_data&wpie_import_id=" + wpiePluginSettings.wpieImportId,
                        dataType: 'json',
                        async: true,
                        success: function (results) {

                                if (results.status == "error") {

                                        wpieSetErrorMsg(results.message);

                                        return false;

                                }

                                if (typeof (results.imported) != "undefined" && results.imported !== null) {

                                        jQuery('.wpie_import_created').text(parseInt(results.created));

                                        jQuery('.wpie_import_updated').text(parseInt(results.updated));

                                        jQuery('.wpie_import_skipped').text(parseInt(results.skipped));

                                        jQuery('.wpie_import_processing_total').text(parseInt(results.imported));

                                        var activeFile = wpiePluginSettings.importData.activeFile;

                                        var totalPer = parseInt(parseInt(results.imported) * 100 / parseInt(wpiePluginSettings.importData[activeFile].count));

                                        if (totalPer > 100)
                                        {
                                                totalPer = 100;
                                        }
                                        jQuery('.wpie_import_process_per').css('width', totalPer + "%").html(totalPer + "%");

                                        jQuery('.wpie_log_container').append(results.import_log);

                                        //wpiePluginSettings.importData.processing = false;

                                        if (wpiePluginSettings.importData[activeFile].count > parseInt(results.imported))
                                        {
                                                wpieImportData();

                                        } else
                                        {
                                                wpieCompleteImport();
                                        }
                                }
                                // wpiePluginSettings.importData.processing = false;
                        },
                        error: function (jqXHR, exception) {

                                wpiePluginSettings.importData.processing = false;

                                wpieHandleAjaxError(jqXHR, exception);
                        }
                });
        } else if (wpiePluginSettings.importData.processStatus == "pause") {

                if (typeof wpiePluginSettings.importData.importInterval != 'undefined') {
                        clearInterval(wpiePluginSettings.importData.importInterval);
                }


                wpieUpdateProcessLoader("wpieProcessingNotice");


                jQuery('.wpie_import_action_resume_btn').show();

                jQuery('.wpie_import_action_pause_btn').hide();

                wpiePluginSettings.importData.processing = false;

        } else if (wpiePluginSettings.importData.processStatus == "stop") {

                if (typeof wpiePluginSettings.importData.importInterval != 'undefined') {
                        clearInterval(wpiePluginSettings.importData.importInterval);
                }

                jQuery('.wpie_import_action_container').hide();


                wpieUpdateProcessLoader("wpieProcessingNotice");


                wpiePluginSettings.importData.processing = false;

        } else if (wpiePluginSettings.importData.processStatus == "bg") {

                if (typeof wpiePluginSettings.importData.importInterval != 'undefined') {
                        clearInterval(wpiePluginSettings.importData.importInterval);
                }

                jQuery('.wpie_import_action_container').hide();


                wpieUpdateProcessLoader("wpieProcessingNotice");


                wpiePluginSettings.importData.processing = false;

                wpieChangeStatus("bg");

        }
}
function wpieCompleteImport()
{
        jQuery('.wpie_import_process_text_header').text(wpiePluginSettings.wpieLocalizeText.wpieImportCompleteText);

        jQuery('.wpie_import_process_text_notice').text(wpiePluginSettings.wpieLocalizeText.wpieImportCompleteNoticeText);

        if (typeof wpiePluginSettings.importData.importInterval != 'undefined') {
                clearInterval(wpiePluginSettings.importData.importInterval);
        }

        jQuery('.wpie_import_action_container').hide();

        jQuery('.wpie_import_processing_wrapper').hide();

        jQuery('.wpie_import_process_complete_wrapper').show();

}
jQuery(document).on('click', '.wpie_import_action_pause_btn', function () {

        jQuery('.wpie_import_process_text_header').text(wpiePluginSettings.wpieLocalizeText.wpieImportPausedText);

        jQuery('.wpie_import_process_text_notice').text(wpiePluginSettings.wpieLocalizeText.wpieImportPartiallyText);

        wpiePluginSettings.importData.processStatus = "pause";

        if (wpiePluginSettings.importData.processing == true) {

                var task_list = {
                        "wpieProcessingNotice": wpiePluginSettings.wpieLocalizeText.wpieImportProcessingNoticeText
                }

                wpieSetProcessLoader(task_list);

        } else {

                jQuery('.wpie_import_action_resume_btn').show();

                jQuery('.wpie_import_action_pause_btn').hide();
        }

});
jQuery(document).on('click', '.wpie_import_action_stop_btn', function () {

        wpiePluginSettings.importData.processStatus = "stop";

        jQuery('.wpie_import_process_text_header').text(wpiePluginSettings.wpieLocalizeText.wpieImportStoppedText);

        jQuery('.wpie_import_process_text_notice').text(wpiePluginSettings.wpieLocalizeText.wpieImportPartiallyText);


        if (wpiePluginSettings.importData.processing == true) {

                var task_list = {
                        "wpieProcessingNotice": wpiePluginSettings.wpieLocalizeText.wpieImportProcessingNoticeText
                }

                wpieSetProcessLoader(task_list);

        } else {

                jQuery('.wpie_import_action_container').hide();

        }

});
jQuery(document).on('click', '.wpie_import_action_resume_btn', function () {

        wpiePluginSettings.importData.processStatus = "processing";

        jQuery('.wpie_import_process_text_header').text(wpiePluginSettings.wpieLocalizeText.wpieImportProcessingText);

        jQuery('.wpie_import_process_text_notice').text(wpiePluginSettings.wpieLocalizeText.wpieImportProcessingNoticeText);

        wpiePluginSettings.importData.importInterval = setInterval(function () {
                jQuery('.wpie_import_time_elapsed').html(wpieElapsedTimeString(wpiePluginSettings.importData.importIntervalSec++));
        }, 1000);

        jQuery(this).hide();

        jQuery('.wpie_import_action_pause_btn').show();

        wpieImportData();
});
jQuery(document).on('click', '.wpie_field_mapping_container_title', function () {

        if (jQuery(this).hasClass("wpie_active"))
        {
                jQuery(this).removeClass("wpie_active");
        } else {
                jQuery(this).addClass("wpie_active");
        }
        jQuery(this).parent().find(".wpie_field_mapping_container_data").slideToggle();
});
function wpieRefreshTemplateList(data)
{
        var templateList = jQuery('.wpie_template_list').chosen("destroy").html('');

        templateList.append(new Option(wpiePluginSettings.wpieLocalizeText.selectTemplateText, ""));

        if (!jQuery.isEmptyObject(data))
        {
                jQuery.each(data, function (key, value) {

                        templateList.append(new Option(value.name, value.id));
                });
        }

        templateList.chosen();
}
function wpieImportGetTemplates()
{
        var importType = jQuery('.wpie_import_type_select').val();

        if (typeof wpiePluginSettings.importData[importType] == 'undefined') {
                wpiePluginSettings.importData[importType] = [];
        }
        if (typeof wpiePluginSettings.importData[importType].templates != 'undefined') {

                wpieRefreshTemplateList(wpiePluginSettings.importData[importType].templates);

                wpieUpdateProcessLoader("wpieGetTemplates");

        } else {

                jQuery.ajax({
                        url: wpiePluginSettings.wpieAjaxURL,
                        type: 'GET',
                        data: "action=wpie_import_get_templates&wpie_import_type=" + importType,
                        dataType: 'json',
                        async: true,
                        success: function (results) {

                                if (results.status == "error") {

                                        wpieSetErrorMsg(results.message);

                                        return false;
                                }
                                wpieUpdateProcessLoader("wpieGetTemplates");

                                if (typeof results.templates != 'undefined') {

                                        wpiePluginSettings.importData[importType].templates = results.templates;

                                        wpieRefreshTemplateList(results.templates);
                                }


                        },
                        error: function (jqXHR, exception) {

                                wpieHandleAjaxError(jqXHR, exception);
                        }
                });
        }
}
function wpieRefreshSettingList(data)
{
        var templateList = jQuery('.wpie_setting_list').chosen("destroy").html('');

        templateList.append(new Option(wpiePluginSettings.wpieLocalizeText.selectTemplateText, ""));

        if (!jQuery.isEmptyObject(data))
        {
                jQuery.each(data, function (key, value) {

                        templateList.append(new Option(value.name, value.id));
                });
        }

        templateList.chosen();
}
function wpieImportGetSettings()
{
        var importType = jQuery('.wpie_import_type_select').val();

        if (typeof wpiePluginSettings.importData[importType] == 'undefined') {
                wpiePluginSettings.importData[importType] = [];
        }
        if (typeof wpiePluginSettings.importData[importType].settings != 'undefined') {

                wpieRefreshSettingList(wpiePluginSettings.importData[importType].settings);

                wpieUpdateProcessLoader("wpieGetSettingsList");

        } else {

                jQuery.ajax({
                        url: wpiePluginSettings.wpieAjaxURL,
                        type: 'POST',
                        data: "action=wpie_import_get_settings&type=" + importType,
                        dataType: 'json',
                        async: true,
                        success: function (results) {

                                if (results.status == "error") {

                                        wpieSetErrorMsg(results.message);

                                        return false;
                                }
                                wpieUpdateProcessLoader("wpieGetSettingsList");

                                if (typeof results.templates != 'undefined') {

                                        wpiePluginSettings.importData[importType].settings = results.templates;

                                        wpieRefreshSettingList(results.templates);
                                }


                        },
                        error: function (jqXHR, exception) {

                                wpieHandleAjaxError(jqXHR, exception);
                        }
                });
        }
}
jQuery(document).on('click', '.wpie_save_template_btn', function () {
        wpieSaveTemplate(0);

});
jQuery(document).on('click', '.wpie_update_template_btn', function () {

        var templateId = jQuery('.wpie_template_list').val();

        if (templateId == "")
        {
                wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.selectSettingText);

                return false;
        }

        wpieSaveTemplate(templateId);

});
function wpieSaveTemplate(templateId) {

        var template_name = jQuery('.wpie_template_name').val();

        if (template_name == "" && templateId === 0)
        {
                wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.enterSettingNameText);

                return false;
        }

        var task_list = {
                "wpieSaveTemplatesText": wpiePluginSettings.wpieLocalizeText.wpieSaveSettingsText
        }

        wpieSetProcessLoader(task_list);

        var form_data = jQuery('.wpie_import_frm').serialize();

        jQuery.ajax({
                url: wpiePluginSettings.wpieAjaxURL,
                type: 'POST',
                data: "action=wpie_import_save_templates&template_id=" + templateId + "&" + form_data,
                dataType: 'json',
                async: true,
                success: function (results) {

                        if (results.status == "error") {

                                wpieSetErrorMsg(results.message);

                                wpieUpdateProcessLoader("wpieSaveTemplatesText");

                                return false;

                        }
                        if (templateId === 0) {
                                jQuery('.wpie_template_list').append(new Option(template_name, results.template_id)).val("").trigger('chosen:updated');

                                jQuery('.wpie_template_name').val("");
                        } else {
                                if (typeof wpiePluginSettings.importData.templateData != 'undefined' && typeof wpiePluginSettings.importData.templateData[templateId] != 'undefined') {
                                        delete wpiePluginSettings.importData.templateData[templateId];
                                }

                        }
                        wpieSetSuccessMsg(results.message);

                        wpieUpdateProcessLoader("wpieSaveTemplatesText");

                },
                error: function (jqXHR, exception) {

                        wpieHandleAjaxError(jqXHR, exception);
                }
        });
}
jQuery(document).on('click', '.wpie_update_item_all_action', function () {

        if (jQuery('.wpie_item_update_field').length == jQuery('.wpie_item_update_field:checked').length)
        {
                jQuery('.wpie_item_update_field').prop("checked", false);
        } else {

                jQuery('.wpie_item_update_field').prop("checked", true);
        }

        wpieValidateUpdateFields();

});
jQuery(document).on('change', '.wpie_template_list', function () {

        if (jQuery(this).val() != "")
        {
                var task_list = {
                        "wpieChangeTemplates": wpiePluginSettings.wpieLocalizeText.wpieUpdateSettingsText,
                        "wpieGetTemplatesText": wpiePluginSettings.wpieLocalizeText.wpieGetSettingsText
                }

                jQuery('.wpie_update_template_btn_wrapper').show();

                jQuery('.wpie_setting_list').val("").trigger('chosen:updated')

                wpieSetProcessLoader(task_list);

                wpieImportGetTemplateData(jQuery(this).val());
        } else {
                jQuery('.wpie_update_template_btn_wrapper').hide();
        }

});
jQuery(document).on('change', '.wpie_setting_list', function () {

        if (jQuery(this).val() != "")
        {
                var task_list = {
                        "wpieChangeTemplates": wpiePluginSettings.wpieLocalizeText.wpieUpdateSettingsText,
                        "wpieGetTemplatesText": wpiePluginSettings.wpieLocalizeText.wpieGetSettingsText
                }

                jQuery('.wpie_update_template_btn_wrapper').hide();

                jQuery('.wpie_template_list').val("").trigger('chosen:updated');

                wpieSetProcessLoader(task_list);

                wpieImportGetTemplateData(jQuery(this).val());
        }


});
function wpieImportGetTemplateData(templateId)
{
        if (typeof wpiePluginSettings.importData.templateData == 'undefined') {
                wpiePluginSettings.importData.templateData = [];
        }
        if (typeof wpiePluginSettings.importData.templateData[templateId] != 'undefined') {

                wpieUpdateProcessLoader("wpieGetTemplatesText");
                wpieSetTemplate(wpiePluginSettings.importData.templateData[templateId]);
        } else {

                jQuery.ajax({
                        url: wpiePluginSettings.wpieAjaxURL,
                        type: 'GET',
                        data: "action=wpie_import_get_template_data&wpie_template_id=" + templateId,
                        dataType: 'json',
                        async: true,
                        success: function (results) {

                                if (results.status == "error") {

                                        wpieSetErrorMsg(results.message);

                                        return false;
                                }
                                wpieUpdateProcessLoader("wpieGetTemplatesText");

                                if (typeof results.template_data != 'undefined') {

                                        wpiePluginSettings.importData.templateData[templateId] = results.template_data;

                                        wpieSetTemplate(results.template_data);

                                }
                                wpieUpdateProcessLoader("wpieChangeTemplates");

                        },
                        error: function (jqXHR, exception) {

                                wpieHandleAjaxError(jqXHR, exception);
                        }
                });
        }
}

function wpieExcludeCF() {

        if (jQuery(".wpie_exclude_cf_list").length) {
                jQuery(".wpie_exclude_cf_list").remove();
        }

        var default_list = "_thumbnail_id||_price||_variation_description";

        jQuery("<input>").attr("type", "hidden").addClass('wpie_exclude_cf_list').val(default_list).trigger('change');

        var data = jQuery(".wpie_exclude_cf_list").val();

        if (typeof data == "undefined" || data.trim() === "") {
                return [];
        }

        data = data.trim();

        var exclude = data.replace(/^\|+|\|+$/g, '').split('||');

        return exclude;

}
function wpieSetCFRec(fields, closest) {

        if (!jQuery.isEmptyObject(fields)) {

                var temp_count = 0;

                var excludeCF = wpieExcludeCF();

                jQuery.each(fields, function (index, data) {

                        var name = "";

                        if (typeof data.name != "undefined") {
                                name = data.name;
                        }

                        if (name.trim() === "") {
                                return true;
                        }
//                        if (jQuery.inArray(name, ['_thumbnail_id', '_price', '_variation_description']) !== -1) {
//                                return true;
//                        }
                        if (jQuery.inArray(name, excludeCF) !== -1) {
                                return true;
                        }

                        if (temp_count > 0) {

                                wpieAddNewCF(closest);
                        }
                        var last_child = closest.children('tbody').children('.wpie_data_row').last();

                        last_child.children('.wpie_item_cf_name_wrapper').find('.wpie_item_cf_name').val(name);

                        var value = "";

                        if (typeof data.value != "undefined") {
                                value = data.value;
                        }

                        last_child.children('.wpie_item_cf_value_wrapper').children('.wpie_cf_normal_data').find(".wpie_item_cf_value").val(value);

                        var option = "";

                        if (typeof data.option != "undefined") {
                                option = data.option;
                        }

                        last_child.children('.wpie_item_cf_option_wrapper').find(".wpie_item_cf_option").val(option).trigger('chosen:updated').trigger('change');

                        if (option === "serialized" && typeof data.values != "undefined") {

                                var serbtn = last_child.children('.wpie_item_cf_value_wrapper').children('.wpie_cf_serialized_data_btn');

                                wpieAddSerialyzeLayout(serbtn, false);

                                var closestChild = last_child.children('.wpie_item_cf_value_wrapper').children('.wpie_cf_child_data').children('.wpie_cf_table');

                                wpieSetCFRec(data.values, closestChild)

                        }

                        temp_count++;
                });
        }
}
function wpieSetCF(fields)
{
        jQuery('.wpie_cf_option_outer_wrapper .wpie_cf_option_wrapper:not(:first-child)').remove();

        if (!jQuery.isEmptyObject(fields)) {

                if (typeof fields.wpie_item_cf != "undefined" && typeof fields.wpie_item_cf !== null) {

                        var closest = jQuery(".wpie_cf_table");

                        wpieSetCFRec(fields.wpie_item_cf, closest);

                } else if (typeof fields.wpie_item_cf_name != 'undefined') {

                        var metaValue = [];

                        if (typeof fields.wpie_item_cf_value != 'undefined') {
                                metaValue = fields.wpie_item_cf_value;
                        }
                        var metaValueOption = [];

                        if (typeof fields.wpie_item_cf_option != 'undefined') {
                                metaValueOption = fields.wpie_item_cf_option;
                        }
                        var metaSerializeKey = [];
                        if (typeof fields.wpie_item_cf_serialize_key != 'undefined') {
                                metaSerializeKey = fields.wpie_item_cf_serialize_key;
                        }
                        var metaSerializeValue = [];

                        if (typeof fields.wpie_item_cf_serialize_value != 'undefined') {
                                metaSerializeValue = fields.wpie_item_cf_serialize_value;
                        }

                        var wpie_item_cf = {};

                        jQuery.each(fields.wpie_item_cf_name, function (index, metaKey) {

                                var randstring = wpieRand(20);

                                wpie_item_cf[randstring] = {};

                                wpie_item_cf[randstring]['name'] = metaKey;

                                var meta_value = "";

                                if (typeof metaValue[index] != 'undefined') {
                                        meta_value = metaValue[index];
                                }

                                wpie_item_cf[randstring]['value'] = meta_value;

                                var dataOption = "normal";

                                if (metaValueOption[index] != 'undefined' && metaValueOption[index] === "serialized")
                                {
                                        dataOption = metaValueOption[index];
                                }

                                wpie_item_cf[randstring]['option'] = dataOption;

                                if (dataOption === "serialized" && typeof metaSerializeKey[index] != 'undefined') {

                                        var serializeValue = [];



                                        wpie_item_cf[randstring]['values'] = {};

                                        if (typeof metaSerializeValue[index] != 'undefined') {
                                                serializeValue = metaSerializeValue[index];
                                        }


                                        jQuery.each(metaSerializeKey[index], function (_index, _key) {

                                                var ser_val = "";

                                                if (serializeValue[_index] != 'undefined')
                                                {
                                                        ser_val = serializeValue[_index];
                                                }
                                                var innerRandstring = wpieRand(20);
                                                wpie_item_cf[randstring]['values'][innerRandstring] = {};
                                                wpie_item_cf[randstring]['values'][innerRandstring]["name"] = _key;
                                                wpie_item_cf[randstring]['values'][innerRandstring]["value"] = ser_val;
                                                wpie_item_cf[randstring]['values'][innerRandstring]["option"] = "normal";


                                        });
                                }

                        });

                        if (!jQuery.isEmptyObject(wpie_item_cf)) {

                                var closest = jQuery(".wpie_cf_table");

                                wpieSetCFRec(wpie_item_cf, closest);
                        }
                }
        }
}
jQuery(document).on('click', '.wpie_file_option_btn', function () {

        var wpie_csv_delimiter = jQuery('.wpie_csv_delimiter').val();

        if (wpie_csv_delimiter == "")
        {
                wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.enterCsvDelimiterText);

                return false;
        }
        var task_list = {
                "wpieValidateUpload": wpiePluginSettings.wpieLocalizeText.wpieParingUploadFileText,
                "wpieGetFields": wpiePluginSettings.wpieLocalizeText.wpieGetFieldsText,
                "wpieGetRecords": wpiePluginSettings.wpieLocalizeText.wpieGetRecordsText
        }

        wpieSetProcessLoader(task_list);

        wpieValidateUploadedFile(true, wpie_csv_delimiter);

});
jQuery(document).on('change', '.wpie_item_image_option', function () {

        var image_option = jQuery(this).val();

        if (image_option == "media_library")
        {
                jQuery('.wpie_image_media_option_data').slideUp();

        } else {
                jQuery('.wpie_image_media_option_data').slideDown();
        }

});
jQuery(document).on('click', '.wpie_import_step5_btn', function () {

        wpieShowLoader();

        var activeFile = wpiePluginSettings.importData.activeFile;

        jQuery(".wpie_import_total_count").html(wpiePluginSettings.importData[activeFile].count);

        jQuery(".wpie_import_filename").html(wpiePluginSettings.importData[activeFile].fileName);

        jQuery(".wpie_import_filesize").html(wpiePluginSettings.importData[activeFile].fileSize);

        jQuery(".wpie_import_per_iteration").html(jQuery('.wpie_records_per_request').val());

        jQuery('.wpie_import_update_criteria').html(jQuery('.wpie_existing_item_search_logic:checked').val());

        var handle_items = jQuery('.wpie_handle_items:checked').val();

        jQuery('.wpie_import_item_selection_text').hide();

        if (handle_items === "existing") {
                jQuery('.wpie_existing_item_update').show();
                jQuery('.wpie_new_item_skip').show();
        } else if (handle_items === "new") {
                jQuery('.wpie_existing_item_skip').show();
                jQuery('.wpie_new_item_create').show();
        } else {
                jQuery('.wpie_existing_item_update').show();
                jQuery('.wpie_new_item_create').show();
        }

        if ("all" == jQuery('.wpie_import_file_processing:checked').val())
        {
                jQuery('.wpie_import_iteration_text').hide();

                jQuery('.wpie_import_hidh_speed_text').show();

        } else {

                jQuery('.wpie_import_iteration_text').show();

                jQuery('.wpie_import_hidh_speed_text').hide();

                if (!jQuery('.wpie_import_split_file').is(":checked"))
                {
                        jQuery('.wpie_import_iteration_chunks_text').hide();
                }
        }

        jQuery('.wpie_update_item_data_container').removeClass("wpie_required");

        wpieHideLoader();

});
jQuery(document).on('click', '.wpie_existing_file_btn', function () {

        var file = jQuery('.wpie_upload_existing_file').val();

        if (file == "")
        {
                wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.wpieChooseValidFileText);

                return false;
        }

        wpieSetProcessLoader({"wpieSetExistingFileText": wpiePluginSettings.wpieLocalizeText.wpieSetExistingFileText});

        jQuery.ajax({
                url: wpiePluginSettings.wpieAjaxURL,
                type: 'GET',
                data: "action=wpie_import_set_existing_file&wpie_import_id=" + wpiePluginSettings.wpieImportId + "&file_name=" + file,
                dataType: 'json',
                async: true,
                success: function (results) {

                        wpieUpdateProcessLoader("wpieSetExistingFileText");

                        if (results.status == "error") {

                                wpieSetErrorMsg(results.message);

                                return false;
                        }

                        jQuery('.wpie_final_existing_file').val(file);

                        wpieSetFileData(results);
                },
                error: function (jqXHR, exception) {

                        wpieHandleAjaxError(jqXHR, exception);
                }
        });
});
jQuery(document).on('click', '.wpie_pre_import_btn .wpie_import_bg_process_btn', function () {

        wpieInitImport("bg");
});
jQuery(document).on('click', '.wpie_import_processing_btn .wpie_import_bg_process_btn', function () {

        wpiePluginSettings.importData.processStatus = "bg";

        jQuery('.wpie_import_process_text_header').text(wpiePluginSettings.wpieLocalizeText.wpieImportBGText);

        jQuery('.wpie_import_process_text_notice').text(wpiePluginSettings.wpieLocalizeText.wpieImportBGNoticeText);

        if (wpiePluginSettings.importData.processing == true) {

                var task_list = {
                        "wpieProcessingNotice": wpiePluginSettings.wpieLocalizeText.wpieImportProcessingNoticeText
                }

                wpieSetProcessLoader(task_list);

        } else {

                jQuery('.wpie_import_action_container').hide();

                wpieChangeStatus("bg");

        }
});
function wpieChangeStatus(status)
{
        wpieSetProcessLoader({"wpieSetBGProcessText": wpiePluginSettings.wpieLocalizeText.wpieSetBGProcessText});

        var wpie_import_id = wpiePluginSettings.wpieImportId;

        jQuery.ajax({
                url: wpiePluginSettings.wpieAjaxURL,
                type: 'GET',
                data: "action=wpie_import_update_status&wpie_import_id=" + wpie_import_id + "&status=" + status,
                dataType: 'json',
                async: true,
                success: function (results) {

                        if (results.status == "error") {

                                wpieSetErrorMsg(results.message);

                                return false;
                        }
                        wpieUpdateProcessLoader("wpieSetBGProcessText");
                        if (status == "bg") {
                                wpieSetSuccessMsg(wpiePluginSettings.wpieLocalizeText.wpieBgProcessingText);
                        }
                },
                error: function (jqXHR, exception) {

                        wpieHandleAjaxError(jqXHR, exception);
                }
        });
}

jQuery(document).on('click', '.wpie_save_scheduled_btn', function () {

        wpieSetProcessLoader({"wpieSetScheduleExport": wpiePluginSettings.wpieLocalizeText.wpieSetScheduleExportText});

        var activeFile = wpiePluginSettings.importData.activeFile;

        var is_new_items = 1;

        if (jQuery(".wpie_import_type.wpie_active").hasClass('wpie_update_item'))
        {
                is_new_items = 0;
        }

        var wpie_import_id = wpiePluginSettings.wpieImportId;

        var xpath = wpiePluginSettings.importData[activeFile].xpath;

        var root = wpiePluginSettings.importData[activeFile].root;

        var bg = 0;

        var form_data = jQuery('.wpie_import_frm').serialize();

        jQuery.ajax({
                url: wpiePluginSettings.wpieAjaxURL,
                type: 'POST',
                data: "action=wpie_save_import_scheduled&wpie_import_id=" + wpie_import_id + "&bg=" + bg + "&xpath=" + xpath + "&root=" + root + "&is_new_items=" + is_new_items + "&" + form_data,
                dataType: 'json',
                async: true,
                success: function (results) {

                        if (results.status == "error") {

                                wpieSetErrorMsg(results.message);

                                return false;

                        }

                        wpieUpdateProcessLoader("wpieSetScheduleExport");

                        jQuery('.wpie_save_schedule_status_notify').modal({backdrop: 'static', keyboard: false, show: true});

                        return false;

                },
                error: function (jqXHR, exception) {

                        wpieHandleAjaxError(jqXHR, exception);
                }
        });
});
jQuery(document).on('click', '.wpie_url_upload_btn', function () {

        var file_url = encodeURIComponent(jQuery('.wpie_file_upload_url').val());

        if (file_url == "")
        {
                wpieSetErrorMsg(wpiePluginSettings.wpieLocalizeText.wpieInvalidURLText);

                return false;
        }

        wpieSetProcessLoader({"wpieUploadFromURLText": wpiePluginSettings.wpieLocalizeText.wpieUploadFromURLText});

        jQuery.ajax({
                url: wpiePluginSettings.wpieAjaxURL,
                type: 'POST',
                data: "action=wpie_import_upload_file_from_url&wpie_import_id=" + wpiePluginSettings.wpieImportId + "&file_url=" + file_url,
                dataType: 'json',
                async: true,
                success: function (results) {

                        wpieUpdateProcessLoader("wpieUploadFromURLText");

                        if (results.status == "error") {

                                wpieSetErrorMsg(results.message);

                                return false;
                        }

                        jQuery('.wpie_upload_final_file_url').val(file_url);

                        wpieSetFileData(results);
                },
                error: function (jqXHR, exception) {

                        wpieUpdateProcessLoader("wpieUploadFromURLText");

                        wpieHandleAjaxError(jqXHR, exception);
                }
        });
});
jQuery(document).on('change', '.wpie_item_dropdown_as_specified', function () {

        var value = jQuery(this).val();

        if (value == "as_specified") {
                jQuery(".wpie_item_as_specified_wrapper").show();
        } else {
                jQuery(".wpie_item_as_specified_wrapper").hide();
        }
});
jQuery(document).on('click', '.wpie_ftp_upload_btn', function () {

        var hostname = jQuery('.wpie_ftp_hostname').val();

        var host_port = jQuery('.wpie_ftp_host_port').val();

        var username = jQuery('.wpie_ftp_host_username').val();

        var password = jQuery('.wpie_ftp_host_password').val();

        var host_path = jQuery('.wpie_ftp_host_path').val();

        var connection_type = jQuery('.wpie_connection_type:checked').val();

        var error_msg = "";

        if (hostname === "") {
                error_msg = wpiePluginSettings.wpieLocalizeText.wpieInvalidHostNameText;
        } else if (username == "") {
                error_msg = wpiePluginSettings.wpieLocalizeText.wpieInvalidHostUsernameText;
        } else if (password == "") {
                error_msg = wpiePluginSettings.wpieLocalizeText.wpieInvalidHostPasswordText;
        } else if (host_path == "") {
                error_msg = wpiePluginSettings.wpieLocalizeText.wpieInvalidHostPathText;
        }

        if (error_msg !== "")
        {
                wpieSetErrorMsg(error_msg);
                return false;
        }

        var ftp = {"host": hostname, "port": host_port, "username": username, "password": password, "path": host_path, "connection_type": connection_type};

        jQuery(".wpie_ftp_details").val(JSON.stringify(ftp));

        wpieSetProcessLoader({"wpieUploadFromFTPText": wpiePluginSettings.wpieLocalizeText.wpieUploadFromFTPText});

        jQuery.ajax({
                url: wpiePluginSettings.wpieAjaxURL,
                type: 'POST',
                data: "action=wpie_import_upload_file_from_ftp&wpie_import_id=" + wpiePluginSettings.wpieImportId + "&host=" + hostname + "&port=" + host_port + "&username=" + username + "&password=" + password + "&path=" + host_path + "&connection_type=" + connection_type,
                dataType: 'json',
                async: true,
                success: function (results) {

                        wpieUpdateProcessLoader("wpieUploadFromFTPText");

                        if (results.status == "error") {

                                wpieSetErrorMsg(results.message);

                                return false;
                        }

                        wpieSetFileData(results);
                },
                error: function (jqXHR, exception) {

                        wpieHandleAjaxError(jqXHR, exception);
                }
        });
});
function wpieIsData() {
        return true;
}
function wpieSetTaxonomy(fields) {

        wpieResetTaxonomy();

        if (!jQuery.isEmptyObject(fields)) {

                if (typeof fields.wpie_item_set_taxonomy != 'undefined') {

                        var taxonomy = [];

                        if (typeof fields.wpie_item_taxonomy != 'undefined') {
                                taxonomy = fields.wpie_item_taxonomy;
                        }
                        var taxonomyDelim = [];

                        if (typeof fields.wpie_item_taxonomy_delim != 'undefined') {
                                taxonomyDelim = fields.wpie_item_taxonomy_delim;
                        }
                        var taxonomyHierarchicalDelim = [];
                        if (typeof fields.wpie_item_taxonomy_hierarchical_delim != 'undefined') {
                                taxonomyHierarchicalDelim = fields.wpie_item_taxonomy_hierarchical_delim;
                        }
                        var taxonomyChildOnly = [];

                        if (typeof fields.wpie_item_taxonomy_child_only != 'undefined') {
                                taxonomyChildOnly = fields.wpie_item_taxonomy_child_only;
                        }

                        jQuery.each(fields.wpie_item_set_taxonomy, function (term, is_set) {

                                if (is_set != 1) {
                                        return true;
                                }

                                jQuery('.wpie_item_set_taxonomy_' + term).prop("checked", true);

                                if (typeof taxonomy[term] != 'undefined') {
                                        var test = taxonomy[term];
                                        jQuery('.wpie_item_taxonomy_' + term).val(test);
                                }
                                if (typeof taxonomyDelim[term] != 'undefined') {
                                        jQuery('.wpie_item_taxonomy_delim_' + term).val(taxonomyDelim[term]);
                                }
                                if (typeof taxonomyHierarchicalDelim[term] != 'undefined') {
                                        jQuery('.wpie_item_taxonomy_hierarchical_delim_' + term).val(taxonomyHierarchicalDelim[term]);
                                }
                                if (typeof taxonomyChildOnly[term] != 'undefined' && taxonomyChildOnly[term] == 1) {
                                        jQuery('.wpie_item_taxonomy_child_only_' + term).prop("checked", true);
                                } else {
                                        jQuery('.wpie_item_taxonomy_child_only_' + term).prop("checked", false);
                                }

                        });
                }
        }
}
function wpieResetTaxonomy()
{
        jQuery(".wpie_item_set_taxonomy").prop("checked", false);

        jQuery('.wpie_item_taxonomy').val("");

        jQuery('.wpie_item_taxonomy_delim').val(",");

        jQuery('.wpie_item_taxonomy_hierarchical_delim').val(">");

        jQuery('.wpie_taxonomy_hierarchical_child_only').prop("checked", false);

}
jQuery(document).on('change', '.wpie_item_attribute_source', function () {

        var value = jQuery(this).val();

        if (value == "as_specified") {
                jQuery(".wpie_attribute_search_existing_data").show();
        } else {
                jQuery(".wpie_attribute_search_existing_data").hide();
        }
});
jQuery(document).on('click', '.wpie_show_more_data', function () {

        var text = jQuery(this).parent().find('.wpie_tag_content_text');
        var fullText = jQuery(this).parent().find('.wpie_tag_content_full_text');

        if (jQuery(this).hasClass('wpie_show_less')) {
                text.css('display', "inline");
                fullText.hide();
                jQuery(this).removeClass('wpie_show_less').text(wpiePluginSettings.wpieLocalizeText.showMoreText);
        } else {
                text.hide();
                fullText.css('display', "inline");
                jQuery(this).addClass('wpie_show_less').text(wpiePluginSettings.wpieLocalizeText.showLessText);
        }
});
jQuery(document).on('click', '.wpie_inner_section_label', function () {

        var icon = jQuery(this).find(".wpie_inner_section_icon");

        if (icon.hasClass('fa-chevron-down')) {
                icon.removeClass('fa-chevron-down');
                icon.addClass('fa-chevron-up');
        } else {
                icon.addClass('fa-chevron-down');
                icon.removeClass('fa-chevron-up');
        }

        jQuery(this).parent().find(".wpie_inner_section_container").slideToggle();
});

